/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.*;
import JdbcConnection.JdbcHelper;
import Utils.*;
import Validator.Validator;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.awt.image.ImageObserver.HEIGHT;
import java.io.*;
import java.net.URL;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.*;
import java.awt.Desktop;

import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.*;

/**
 *
 * @author Thinkpad
 */
public class TrangChuFrame extends javax.swing.JFrame {

  NhanVienDao nvDAO;
  JdbcHelper connect;
  ArrayList<NhanVien> listNV;
  SanPhamDAO spDAO;
  ArrayList<SanPham> listSP;
  LoaiHinhDAO lhDAO;
  ArrayList<LoaiHinhDichVu> listLH;
  DichVuDAO dvDAO;
  ArrayList<DichVu> listDV;
  ThongKeDAO tkDAO;
  ArrayList<Object[]> listTKKH;
  ArrayList<Object[]> listTKKHTQ;
  ArrayList<Object[]> listTKHD;
  ArrayList<Object[]> listTKDT;
  KhachHangDAO khDAO;
  ArrayList<KhachHang> listKH;
  ArrayList<SanPham> listCartSP;
  ArrayList<DichVu> listCartDV;
  HoaDonDAO hdDAO;
  ArrayList<DichVu> listDVselect;
  ArrayList<SanPham> listSPselect;
  ChiTietHoaDonDAO cthdDAO;
  ArrayList<HoaDonChiTiet> listHDCT;

  public static String maHD;

  /**
   * Creates new form TrangChuFrame
   */
  public TrangChuFrame() {
    customUI();
    initComponents();
    init();
    security();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the
   * Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    popup = new javax.swing.JPopupMenu();
    mniDoiMK = new javax.swing.JMenuItem();
    mniTTCN = new javax.swing.JMenuItem();
    mniDangXuat = new javax.swing.JMenuItem();
    mniHuy = new javax.swing.JMenuItem();
    groupTKTKDT = new javax.swing.ButtonGroup();
    pnlLeft = new javax.swing.JPanel();
    User = new javax.swing.JPanel();
    lblUser = new javax.swing.JLabel();
    pnlDSKH = new javax.swing.JPanel();
    lblDSKH = new javax.swing.JLabel();
    pnlDSSP = new javax.swing.JPanel();
    lbltDSSP = new javax.swing.JLabel();
    pnlDKDV = new javax.swing.JPanel();
    lblDKDV = new javax.swing.JLabel();
    pnlDKLHDV = new javax.swing.JPanel();
    lblDKLHDV = new javax.swing.JLabel();
    pnlDKHD = new javax.swing.JPanel();
    lblDKHD = new javax.swing.JLabel();
    pnlTK = new javax.swing.JPanel();
    lblTK = new javax.swing.JLabel();
    pnlQLNV = new javax.swing.JPanel();
    lblQLNV = new javax.swing.JLabel();
    navbar = new javax.swing.JPanel();
    lblTitle = new javax.swing.JLabel();
    lblTime = new javax.swing.JLabel();
    pnlLHDichVu = new javax.swing.JPanel();
    jScrollPane8 = new javax.swing.JScrollPane();
    tblLHDV = new javax.swing.JTable();
    btnSuaLH = new javax.swing.JButton();
    btnXoaLH = new javax.swing.JButton();
    btnThemLH = new javax.swing.JButton();
    txtTKLH = new javax.swing.JTextField();
    jLabel11 = new javax.swing.JLabel();
    txtTenLH = new javax.swing.JTextField();
    lblTenLH = new javax.swing.JLabel();
    lblGhiChuLH = new javax.swing.JLabel();
    lblMaLH = new javax.swing.JLabel();
    txtMaLH = new javax.swing.JTextField();
    jScrollPane14 = new javax.swing.JScrollPane();
    txtGhiChuLH = new javax.swing.JTextArea();
    jLabel12 = new javax.swing.JLabel();
    pnlDichVu = new javax.swing.JPanel();
    jScrollPane5 = new javax.swing.JScrollPane();
    tblDV = new javax.swing.JTable();
    btnSuaDV = new javax.swing.JButton();
    btnXoaDV = new javax.swing.JButton();
    btnThemDV = new javax.swing.JButton();
    txtTKDV = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    pnlNhanVien = new javax.swing.JPanel();
    jScrollPane9 = new javax.swing.JScrollPane();
    tblNV = new javax.swing.JTable();
    btnSuaNV = new javax.swing.JButton();
    pnlXoaNV = new javax.swing.JButton();
    txtTKNV = new javax.swing.JTextField();
    btnThemNV = new javax.swing.JButton();
    jLabel9 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    pnlSanPham = new javax.swing.JPanel();
    jScrollPane6 = new javax.swing.JScrollPane();
    tblSP = new javax.swing.JTable();
    btnSuaSP = new javax.swing.JButton();
    btnXoaSP = new javax.swing.JButton();
    txtTKSP = new javax.swing.JTextField();
    btnThemSP = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    pnlHoaDon = new javax.swing.JPanel();
    lblNgayTaoHD1 = new javax.swing.JLabel();
    lblNVHD = new javax.swing.JLabel();
    lblNgayTaoHD = new javax.swing.JLabel();
    lblTenNV = new javax.swing.JLabel();
    lblSDTKH3 = new javax.swing.JLabel();
    lblLoaiHinhDV = new javax.swing.JLabel();
    lblSDTKH1 = new javax.swing.JLabel();
    cboLoaiHinhDV = new javax.swing.JComboBox<>();
    lblLoaiHinhDV1 = new javax.swing.JLabel();
    lblLoaiHinhDV2 = new javax.swing.JLabel();
    jScrollPane4 = new javax.swing.JScrollPane();
    dsSP = new javax.swing.JList<>();
    jScrollPane2 = new javax.swing.JScrollPane();
    txtGhiChuHD = new javax.swing.JTextArea();
    jScrollPane1 = new javax.swing.JScrollPane();
    dsDV = new javax.swing.JList<>();
    jScrollPane3 = new javax.swing.JScrollPane();
    tblHD = new javax.swing.JTable();
    lblNVHD1 = new javax.swing.JLabel();
    lblTongTien = new javax.swing.JLabel();
    pnlXoaHang = new javax.swing.JButton();
    pnlTaoHD = new javax.swing.JButton();
    btnLamMoi = new javax.swing.JButton();
    txtTenKH = new javax.swing.JTextField();
    txtSDTKH = new javax.swing.JTextField();
    lblNotification = new javax.swing.JLabel();
    BGHD = new javax.swing.JLabel();
    pnlKhachHang = new javax.swing.JPanel();
    jLabel8 = new javax.swing.JLabel();
    btnThemKH = new javax.swing.JButton();
    txtTKKH = new javax.swing.JTextField();
    btnXoaKH = new javax.swing.JButton();
    btnSuaKH = new javax.swing.JButton();
    jScrollPane7 = new javax.swing.JScrollPane();
    tblKH = new javax.swing.JTable();
    jLabel5 = new javax.swing.JLabel();
    pnlThongKe = new javax.swing.JPanel();
    navTK = new javax.swing.JPanel();
    pnlNavDoanhThu = new javax.swing.JPanel();
    lblTKDT = new javax.swing.JLabel();
    pnlNavKhoHang = new javax.swing.JPanel();
    lblTKKH = new javax.swing.JLabel();
    pnlNavHoaDon = new javax.swing.JPanel();
    lblTKHD = new javax.swing.JLabel();
    pnlNavKHTQ = new javax.swing.JPanel();
    lblTKKHTQ = new javax.swing.JLabel();
    pnlTKDT = new javax.swing.JPanel();
    jScrollPane11 = new javax.swing.JScrollPane();
    tblTKDT = new javax.swing.JTable();
    cboTieuChi = new javax.swing.JComboBox<>();
    txtTKDT = new javax.swing.JTextField();
    lblNotificationDT = new javax.swing.JLabel();
    pnlTKKH = new javax.swing.JPanel();
    jScrollPane10 = new javax.swing.JScrollPane();
    tblTKKH = new javax.swing.JTable();
    pnlTKHD = new javax.swing.JPanel();
    jScrollPane12 = new javax.swing.JScrollPane();
    tblTKHD = new javax.swing.JTable();
    txtTKHD = new javax.swing.JTextField();
    lblNotificationHD = new javax.swing.JLabel();
    pnlTKKHTQ = new javax.swing.JPanel();
    jScrollPane13 = new javax.swing.JScrollPane();
    tblTKKHTQ = new javax.swing.JTable();
    jLabel6 = new javax.swing.JLabel();
    taskbar = new javax.swing.JPanel();
    jLabel7 = new javax.swing.JLabel();
    exit = new javax.swing.JLabel();
    minimize = new javax.swing.JLabel();
    BG = new javax.swing.JLabel();

    popup.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));

    mniDoiMK.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    mniDoiMK.setText("jMenuItem1");
    mniDoiMK.setActionCommand("Thay đổi thông tin");
    mniDoiMK.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        mniDoiMKActionPerformed(evt);
      }
    });
    popup.add(mniDoiMK);
    mniDoiMK.getAccessibleContext().setAccessibleName("Thay đổi thông tin");

    mniTTCN.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    mniTTCN.setText("jMenuItem1");
    mniTTCN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        mniTTCNActionPerformed(evt);
      }
    });
    popup.add(mniTTCN);

    mniDangXuat.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    mniDangXuat.setText("jMenuItem2");
    mniDangXuat.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        mniDangXuatActionPerformed(evt);
      }
    });
    popup.add(mniDangXuat);

    mniHuy.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    mniHuy.setText("jMenuItem3");
    popup.add(mniHuy);
    mniHuy.getAccessibleContext().setAccessibleName("aaaaaaaaaaaa");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("TRANG CHỦ");
    setUndecorated(true);
    getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    pnlLeft.setBackground(new java.awt.Color(236, 252, 246));
    pnlLeft.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    User.setBackground(new java.awt.Color(236, 252, 246));

    lblUser.setBackground(new java.awt.Color(0, 102, 102));
    lblUser.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    lblUser.setForeground(new java.awt.Color(0, 102, 102));
    lblUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/manager.png"))); // NOI18N
    lblUser.setText("Thanh Lam");
    lblUser.setToolTipText("Quản lý cá nhân");
    lblUser.setComponentPopupMenu(popup);

    javax.swing.GroupLayout UserLayout = new javax.swing.GroupLayout(User);
    User.setLayout(UserLayout);
    UserLayout.setHorizontalGroup(
      UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    UserLayout.setVerticalGroup(
      UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(UserLayout.createSequentialGroup()
        .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, Short.MAX_VALUE))
    );

    pnlLeft.add(User, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, 90));

    pnlDSKH.setBackground(new java.awt.Color(236, 252, 246));
    pnlDSKH.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlDSKHMousePressed(evt);
      }
    });
    pnlDSKH.setLayout(new java.awt.CardLayout());

    lblDSKH.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lblDSKH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblDSKH.setText("Khách hàng");
    pnlDSKH.add(lblDSKH, "card2");

    pnlLeft.add(pnlDSKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 240, 50));

    pnlDSSP.setBackground(new java.awt.Color(236, 252, 246));
    pnlDSSP.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlDSSPMousePressed(evt);
      }
    });
    pnlDSSP.setLayout(new java.awt.CardLayout());

    lbltDSSP.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lbltDSSP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lbltDSSP.setText("Sản phẩm");
    pnlDSSP.add(lbltDSSP, "card2");

    pnlLeft.add(pnlDSSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 240, 50));

    pnlDKDV.setBackground(new java.awt.Color(236, 252, 246));
    pnlDKDV.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlDKDVMousePressed(evt);
      }
    });
    pnlDKDV.setLayout(new java.awt.CardLayout());

    lblDKDV.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lblDKDV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblDKDV.setText("Dịch vụ");
    pnlDKDV.add(lblDKDV, "card2");

    pnlLeft.add(pnlDKDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 240, 50));

    pnlDKLHDV.setBackground(new java.awt.Color(236, 252, 246));
    pnlDKLHDV.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlDKLHDVMousePressed(evt);
      }
    });
    pnlDKLHDV.setLayout(new java.awt.CardLayout());

    lblDKLHDV.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lblDKLHDV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblDKLHDV.setText("Loại hình dịch vụ");
    pnlDKLHDV.add(lblDKLHDV, "card2");

    pnlLeft.add(pnlDKLHDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 240, 50));

    pnlDKHD.setBackground(new java.awt.Color(236, 252, 246));
    pnlDKHD.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlDKHDMousePressed(evt);
      }
    });
    pnlDKHD.setLayout(new java.awt.CardLayout());

    lblDKHD.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lblDKHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblDKHD.setText("Hoá đơn");
    pnlDKHD.add(lblDKHD, "card2");

    pnlLeft.add(pnlDKHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 240, 50));

    pnlTK.setBackground(new java.awt.Color(236, 252, 246));
    pnlTK.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlTKMousePressed(evt);
      }
    });
    pnlTK.setLayout(new java.awt.CardLayout());

    lblTK.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lblTK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTK.setText("Thống kê");
    pnlTK.add(lblTK, "card2");

    pnlLeft.add(pnlTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 240, 50));

    pnlQLNV.setBackground(new java.awt.Color(236, 252, 246));
    pnlQLNV.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlQLNVMousePressed(evt);
      }
    });
    pnlQLNV.setLayout(new java.awt.CardLayout());

    lblQLNV.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
    lblQLNV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblQLNV.setText("Nhân viên");
    pnlQLNV.add(lblQLNV, "card2");

    pnlLeft.add(pnlQLNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 240, 50));

    getContentPane().add(pnlLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 240, 750));

    navbar.setBackground(new java.awt.Color(231, 227, 227));
    navbar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

    lblTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    lblTitle.setForeground(new java.awt.Color(51, 51, 51));
    lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    lblTitle.setText("ĐĂNG KÍ HOÁ ĐƠN");

    lblTime.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    lblTime.setForeground(new java.awt.Color(51, 51, 51));
    lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTime.setText("TIME");

    javax.swing.GroupLayout navbarLayout = new javax.swing.GroupLayout(navbar);
    navbar.setLayout(navbarLayout);
    navbarLayout.setHorizontalGroup(
      navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(navbarLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 569, Short.MAX_VALUE)
        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    navbarLayout.setVerticalGroup(
      navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(navbarLayout.createSequentialGroup()
        .addGap(9, 9, 9)
        .addGroup(navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    getContentPane().add(navbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 1050, 30));

    pnlLHDichVu.setBackground(new java.awt.Color(255, 255, 255));
    pnlLHDichVu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jScrollPane8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblLHDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblLHDV.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Mã loại hình", "Tên loại hình", "Ghi chú"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, true, true
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblLHDV.setFocusable(false);
    tblLHDV.setOpaque(false);
    tblLHDV.setRowHeight(25);
    tblLHDV.setRowMargin(3);
    tblLHDV.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblLHDV.setShowVerticalLines(false);
    tblLHDV.getTableHeader().setReorderingAllowed(false);
    jScrollPane8.setViewportView(tblLHDV);
    if (tblLHDV.getColumnModel().getColumnCount() > 0) {
      tblLHDV.getColumnModel().getColumn(0).setMinWidth(150);
      tblLHDV.getColumnModel().getColumn(0).setPreferredWidth(150);
      tblLHDV.getColumnModel().getColumn(0).setMaxWidth(150);
      tblLHDV.getColumnModel().getColumn(1).setMinWidth(150);
      tblLHDV.getColumnModel().getColumn(1).setPreferredWidth(150);
      tblLHDV.getColumnModel().getColumn(1).setMaxWidth(150);
      tblLHDV.getColumnModel().getColumn(2).setMinWidth(200);
      tblLHDV.getColumnModel().getColumn(2).setPreferredWidth(200);
      tblLHDV.getColumnModel().getColumn(2).setMaxWidth(200);
    }
    JTableHeader tableHeaderLHDV = tblLHDV.getTableHeader();     
    tableHeaderLHDV.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderLHDV.setBackground(new Color(0,147,223));     
    tableHeaderLHDV.setOpaque(false);
    tableHeaderLHDV.setForeground(Color.white);

    pnlLHDichVu.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 520, 610));

    btnSuaLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnSuaLH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-property-30.png"))); // NOI18N
    btnSuaLH.setText("Sửa");
    btnSuaLH.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnSuaLH.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSuaLHActionPerformed(evt);
      }
    });
    pnlLHDichVu.add(btnSuaLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 510, -1, -1));

    btnXoaLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnXoaLH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-bin-30.png"))); // NOI18N
    btnXoaLH.setText("Xoá");
    btnXoaLH.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnXoaLH.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnXoaLHActionPerformed(evt);
      }
    });
    pnlLHDichVu.add(btnXoaLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 510, -1, -1));

    btnThemLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnThemLH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-row-30.png"))); // NOI18N
    btnThemLH.setText("Thêm");
    btnThemLH.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnThemLH.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnThemLHActionPerformed(evt);
      }
    });
    pnlLHDichVu.add(btnThemLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, -1, -1));

    txtTKLH.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKLH.setForeground(new java.awt.Color(153, 153, 153));
    txtTKLH.setText("Nhập vào loại hình cần tìm...");
    txtTKLH.setOpaque(false);
    txtTKLH.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKLHFocusGained(evt);
      }
    });
    txtTKLH.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKLHKeyReleased(evt);
      }
    });
    pnlLHDichVu.add(txtTKLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, 290, 30));

    jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-web-search-50.png"))); // NOI18N
    jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    pnlLHDichVu.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 40, 30));

    txtTenLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    txtTenLH.setOpaque(false);
    pnlLHDichVu.add(txtTenLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 280, -1));

    lblTenLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblTenLH.setText("Tên loại hình:");
    pnlLHDichVu.add(lblTenLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

    lblGhiChuLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblGhiChuLH.setText("Ghi chú:");
    pnlLHDichVu.add(lblGhiChuLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

    lblMaLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblMaLH.setText("Mã loại hình:");
    pnlLHDichVu.add(lblMaLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

    txtMaLH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    txtMaLH.setOpaque(false);
    pnlLHDichVu.add(txtMaLH, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 280, -1));

    txtGhiChuLH.setColumns(20);
    txtGhiChuLH.setRows(5);
    txtGhiChuLH.setOpaque(false);
    jScrollPane14.setViewportView(txtGhiChuLH);

    pnlLHDichVu.add(jScrollPane14, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, 280, 170));

    jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlLHDichVu.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, -1));

    getContentPane().add(pnlLHDichVu, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1050, 720));

    pnlDichVu.setBackground(new java.awt.Color(255, 255, 255));
    pnlDichVu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jScrollPane5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblDV.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Test 1 phát", "Tết đến trồ", "Tết đến rồi", "không có ghji chú cái j cả"},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Loại hình dich vụ", "Mã dịch vụ", "Tên dịch vụ", "Ghi chú"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, true, true
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblDV.setFocusable(false);
    tblDV.setOpaque(false);
    tblDV.setRowHeight(25);
    tblDV.setRowMargin(3);
    tblDV.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblDV.setShowVerticalLines(false);
    tblDV.getTableHeader().setReorderingAllowed(false);
    jScrollPane5.setViewportView(tblDV);
    if (tblDV.getColumnModel().getColumnCount() > 0) {
      tblDV.getColumnModel().getColumn(0).setMinWidth(150);
      tblDV.getColumnModel().getColumn(0).setPreferredWidth(150);
      tblDV.getColumnModel().getColumn(0).setMaxWidth(150);
      tblDV.getColumnModel().getColumn(1).setMinWidth(130);
      tblDV.getColumnModel().getColumn(1).setPreferredWidth(130);
      tblDV.getColumnModel().getColumn(1).setMaxWidth(130);
      tblDV.getColumnModel().getColumn(2).setMinWidth(200);
      tblDV.getColumnModel().getColumn(2).setPreferredWidth(200);
      tblDV.getColumnModel().getColumn(2).setMaxWidth(200);
    }
    JTableHeader tableHeaderDV = tblDV.getTableHeader();     
    tableHeaderDV.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderDV.setBackground(new Color(0,147,223));     
    tableHeaderDV.setOpaque(false);
    tableHeaderDV.setForeground(Color.white);

    pnlDichVu.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1010, 580));

    btnSuaDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnSuaDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-property-30.png"))); // NOI18N
    btnSuaDV.setText("Sửa");
    btnSuaDV.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnSuaDV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSuaDVActionPerformed(evt);
      }
    });
    pnlDichVu.add(btnSuaDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 670, -1, -1));

    btnXoaDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnXoaDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-bin-30.png"))); // NOI18N
    btnXoaDV.setText("Xoá");
    btnXoaDV.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnXoaDV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnXoaDVActionPerformed(evt);
      }
    });
    pnlDichVu.add(btnXoaDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 670, -1, -1));

    btnThemDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnThemDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-row-30.png"))); // NOI18N
    btnThemDV.setText("Thêm");
    btnThemDV.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnThemDV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnThemDVActionPerformed(evt);
      }
    });
    pnlDichVu.add(btnThemDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 670, -1, -1));

    txtTKDV.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKDV.setForeground(new java.awt.Color(153, 153, 153));
    txtTKDV.setText("Nhập vào dịch vụ cần tìm...");
    txtTKDV.setOpaque(false);
    txtTKDV.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKDVFocusGained(evt);
      }
    });
    txtTKDV.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKDVKeyReleased(evt);
      }
    });
    pnlDichVu.add(txtTKDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, 290, 30));

    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-web-search-50.png"))); // NOI18N
    jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    pnlDichVu.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 40, 30));

    jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlDichVu.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 720));

    getContentPane().add(pnlDichVu, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1050, 720));

    pnlNhanVien.setBackground(new java.awt.Color(255, 255, 255));
    pnlNhanVien.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jScrollPane9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblNV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblNV.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "STT", "Mã NV", "Tên nhân viên", "Ngày sinh", "Địa chỉ", "Email", "SĐT", "Ngày vào làm", "Lương"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, true, true, true, true, true, false, true
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblNV.setFocusable(false);
    tblNV.setOpaque(false);
    tblNV.setRowHeight(25);
    tblNV.setRowMargin(3);
    tblNV.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblNV.setShowVerticalLines(false);
    tblNV.getTableHeader().setReorderingAllowed(false);
    jScrollPane9.setViewportView(tblNV);
    if (tblNV.getColumnModel().getColumnCount() > 0) {
      tblNV.getColumnModel().getColumn(0).setMinWidth(40);
      tblNV.getColumnModel().getColumn(0).setPreferredWidth(40);
      tblNV.getColumnModel().getColumn(0).setMaxWidth(40);
      tblNV.getColumnModel().getColumn(1).setMinWidth(80);
      tblNV.getColumnModel().getColumn(1).setPreferredWidth(80);
      tblNV.getColumnModel().getColumn(1).setMaxWidth(80);
      tblNV.getColumnModel().getColumn(8).setMinWidth(80);
      tblNV.getColumnModel().getColumn(8).setPreferredWidth(80);
      tblNV.getColumnModel().getColumn(8).setMaxWidth(80);
    }
    JTableHeader tableHeaderNV = tblNV.getTableHeader();     
    tableHeaderNV.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderNV.setBackground(new Color(0,147,223));     
    tableHeaderNV.setOpaque(false);
    tableHeaderNV.setForeground(Color.white);

    pnlNhanVien.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1010, 580));

    btnSuaNV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnSuaNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-property-30.png"))); // NOI18N
    btnSuaNV.setText("Sửa");
    btnSuaNV.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnSuaNV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSuaNVActionPerformed(evt);
      }
    });
    pnlNhanVien.add(btnSuaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 670, -1, -1));

    pnlXoaNV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    pnlXoaNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-bin-30.png"))); // NOI18N
    pnlXoaNV.setText("Xoá");
    pnlXoaNV.setMargin(new java.awt.Insets(2, 5, 2, 5));
    pnlXoaNV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pnlXoaNVActionPerformed(evt);
      }
    });
    pnlNhanVien.add(pnlXoaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 670, -1, -1));

    txtTKNV.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKNV.setForeground(new java.awt.Color(153, 153, 153));
    txtTKNV.setText("Nhập vào nhân viên cần tìm...");
    txtTKNV.setOpaque(false);
    txtTKNV.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKNVFocusGained(evt);
      }
    });
    txtTKNV.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKNVKeyReleased(evt);
      }
    });
    pnlNhanVien.add(txtTKNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, 290, 30));

    btnThemNV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnThemNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-row-30.png"))); // NOI18N
    btnThemNV.setText("Thêm");
    btnThemNV.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnThemNV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnThemNVActionPerformed(evt);
      }
    });
    pnlNhanVien.add(btnThemNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 670, -1, -1));

    jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-web-search-50.png"))); // NOI18N
    jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    pnlNhanVien.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 40, 30));

    jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlNhanVien.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 720));

    getContentPane().add(pnlNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1050, 720));

    pnlSanPham.setBackground(new java.awt.Color(255, 255, 255));
    pnlSanPham.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jScrollPane6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblSP.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblSP.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Test 1 phát", "Tết đến trồ", "Tết đến rồi", null, "100---", "không có ghji chú cái j cả", "10-10-2020"},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null}
      },
      new String [] {
        "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá nhập", "Giá bán", "Ghi chú", "Ngày nhập kho"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, true, true, false, true, true, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblSP.setFocusable(false);
    tblSP.setOpaque(false);
    tblSP.setRowHeight(25);
    tblSP.setRowMargin(3);
    tblSP.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblSP.setShowVerticalLines(false);
    tblSP.getTableHeader().setReorderingAllowed(false);
    jScrollPane6.setViewportView(tblSP);
    if (tblSP.getColumnModel().getColumnCount() > 0) {
      tblSP.getColumnModel().getColumn(0).setMinWidth(150);
      tblSP.getColumnModel().getColumn(0).setPreferredWidth(150);
      tblSP.getColumnModel().getColumn(0).setMaxWidth(150);
      tblSP.getColumnModel().getColumn(2).setMinWidth(80);
      tblSP.getColumnModel().getColumn(2).setPreferredWidth(80);
      tblSP.getColumnModel().getColumn(2).setMaxWidth(80);
      tblSP.getColumnModel().getColumn(3).setMinWidth(130);
      tblSP.getColumnModel().getColumn(3).setPreferredWidth(130);
      tblSP.getColumnModel().getColumn(3).setMaxWidth(130);
      tblSP.getColumnModel().getColumn(4).setMinWidth(130);
      tblSP.getColumnModel().getColumn(4).setPreferredWidth(130);
      tblSP.getColumnModel().getColumn(4).setMaxWidth(130);
    }
    JTableHeader tableHeaderSP = tblSP.getTableHeader();     
    tableHeaderSP.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderSP.setBackground(new Color(0,147,223));     
    tableHeaderSP.setOpaque(false);
    tableHeaderSP.setForeground(Color.white);

    pnlSanPham.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1010, 580));

    btnSuaSP.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnSuaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-property-30.png"))); // NOI18N
    btnSuaSP.setText("Sửa");
    btnSuaSP.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnSuaSP.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSuaSPActionPerformed(evt);
      }
    });
    pnlSanPham.add(btnSuaSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 670, -1, -1));

    btnXoaSP.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnXoaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-bin-30.png"))); // NOI18N
    btnXoaSP.setText("Xoá");
    btnXoaSP.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnXoaSPActionPerformed(evt);
      }
    });
    pnlSanPham.add(btnXoaSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 670, -1, -1));

    txtTKSP.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKSP.setForeground(new java.awt.Color(153, 153, 153));
    txtTKSP.setText("Nhập vào sản phẩm cần tìm...");
    txtTKSP.setOpaque(false);
    txtTKSP.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKSPFocusGained(evt);
      }
    });
    txtTKSP.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKSPKeyReleased(evt);
      }
    });
    pnlSanPham.add(txtTKSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, 290, 30));

    btnThemSP.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-row-30.png"))); // NOI18N
    btnThemSP.setText("Thêm");
    btnThemSP.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnThemSP.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnThemSPActionPerformed(evt);
      }
    });
    pnlSanPham.add(btnThemSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 670, -1, -1));

    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-web-search-50.png"))); // NOI18N
    jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    pnlSanPham.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 40, 30));

    jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlSanPham.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 720));

    getContentPane().add(pnlSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1050, 720));

    pnlHoaDon.setBackground(new java.awt.Color(255, 255, 255));
    pnlHoaDon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    lblNgayTaoHD1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblNgayTaoHD1.setText("Ngày tạo hoá đơn:");
    pnlHoaDon.add(lblNgayTaoHD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

    lblNVHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblNVHD.setText("Nhân Viên:");
    pnlHoaDon.add(lblNVHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

    lblNgayTaoHD.setBackground(new java.awt.Color(255, 204, 204));
    lblNgayTaoHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblNgayTaoHD.setText("Time");
    lblNgayTaoHD.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
    lblNgayTaoHD.setOpaque(true);
    pnlHoaDon.add(lblNgayTaoHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 150, 30));

    lblTenNV.setBackground(new java.awt.Color(255, 204, 204));
    lblTenNV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblTenNV.setText("Nguyễn Hữu Thanh Lam");
    lblTenNV.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
    lblTenNV.setOpaque(true);
    pnlHoaDon.add(lblTenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 200, 30));

    lblSDTKH3.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblSDTKH3.setText("Tên khách hàng:");
    pnlHoaDon.add(lblSDTKH3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

    lblLoaiHinhDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblLoaiHinhDV.setText("Ghi chú:");
    pnlHoaDon.add(lblLoaiHinhDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

    lblSDTKH1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblSDTKH1.setText("SDT khách hàng:");
    pnlHoaDon.add(lblSDTKH1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

    cboLoaiHinhDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    cboLoaiHinhDV.setToolTipText("");
    cboLoaiHinhDV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    cboLoaiHinhDV.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cboLoaiHinhDVActionPerformed(evt);
      }
    });
    pnlHoaDon.add(cboLoaiHinhDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 160, -1));

    lblLoaiHinhDV1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblLoaiHinhDV1.setText("Sản phẩm:");
    pnlHoaDon.add(lblLoaiHinhDV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, -1, -1));

    lblLoaiHinhDV2.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblLoaiHinhDV2.setText("Loại hình dịch vụ:");
    pnlHoaDon.add(lblLoaiHinhDV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

    jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    jScrollPane4.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    dsSP.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2));
    dsSP.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    dsSP.setFixedCellHeight(30);
    dsSP.setOpaque(false);
    dsSP.setSelectionBackground(new java.awt.Color(255, 153, 153));
    dsSP.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        dsSPMousePressed(evt);
      }
    });
    jScrollPane4.setViewportView(dsSP);

    pnlHoaDon.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 150, 230));

    jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    txtGhiChuHD.setColumns(7);
    txtGhiChuHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    txtGhiChuHD.setRows(6);
    txtGhiChuHD.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
    txtGhiChuHD.setOpaque(false);
    jScrollPane2.setViewportView(txtGhiChuHD);

    pnlHoaDon.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 390, 180));

    jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    jScrollPane1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

    dsDV.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2));
    dsDV.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    dsDV.setFixedCellHeight(30);
    dsDV.setName(""); // NOI18N
    dsDV.setOpaque(false);
    dsDV.setSelectionBackground(new java.awt.Color(255, 153, 153));
    dsDV.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        dsDVMousePressed(evt);
      }
    });
    jScrollPane1.setViewportView(dsDV);

    pnlHoaDon.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 160, 190));

    jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblHD.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Loại", "Mã hoạt động", "Tên", "Số lượng", "Giá thành"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
      };
      boolean[] canEdit = new boolean [] {
        false, false, false, false, true
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblHD.setFocusable(false);
    tblHD.setOpaque(false);
    tblHD.setRowHeight(25);
    tblHD.setRowMargin(3);
    tblHD.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblHD.setShowVerticalLines(false);
    tblHD.getTableHeader().setReorderingAllowed(false);
    tblHD.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        tblHDMousePressed(evt);
      }
    });
    jScrollPane3.setViewportView(tblHD);
    if (tblHD.getColumnModel().getColumnCount() > 0) {
      tblHD.getColumnModel().getColumn(0).setMinWidth(60);
      tblHD.getColumnModel().getColumn(0).setPreferredWidth(60);
      tblHD.getColumnModel().getColumn(0).setMaxWidth(60);
      tblHD.getColumnModel().getColumn(1).setMinWidth(130);
      tblHD.getColumnModel().getColumn(1).setPreferredWidth(130);
      tblHD.getColumnModel().getColumn(1).setMaxWidth(130);
      tblHD.getColumnModel().getColumn(3).setMinWidth(100);
      tblHD.getColumnModel().getColumn(3).setPreferredWidth(100);
      tblHD.getColumnModel().getColumn(3).setMaxWidth(100);
      tblHD.getColumnModel().getColumn(4).setMinWidth(100);
      tblHD.getColumnModel().getColumn(4).setPreferredWidth(100);
      tblHD.getColumnModel().getColumn(4).setMaxWidth(100);
    }
    JTableHeader tableHeader = tblHD.getTableHeader();     
    tableHeader.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeader.setBackground(new Color(0,147,223));     
    tableHeader.setOpaque(false);
    tableHeader.setForeground(Color.white);

    pnlHoaDon.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 560, 520));

    lblNVHD1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblNVHD1.setText("Tổng tiền:");
    pnlHoaDon.add(lblNVHD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 580, -1, -1));

    lblTongTien.setBackground(new java.awt.Color(255, 204, 204));
    lblTongTien.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
    lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblTongTien.setText("0");
    lblTongTien.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
    lblTongTien.setOpaque(true);
    pnlHoaDon.add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 580, 190, 30));

    pnlXoaHang.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    pnlXoaHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-bin-30.png"))); // NOI18N
    pnlXoaHang.setText("Xoá");
    pnlXoaHang.setMargin(new java.awt.Insets(2, 5, 2, 5));
    pnlXoaHang.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pnlXoaHangActionPerformed(evt);
      }
    });
    pnlHoaDon.add(pnlXoaHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 660, -1, -1));

    pnlTaoHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    pnlTaoHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-create-order-30.png"))); // NOI18N
    pnlTaoHD.setText("Tạo hoá đơn");
    pnlTaoHD.setMargin(new java.awt.Insets(2, 5, 2, 5));
    pnlTaoHD.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pnlTaoHDActionPerformed(evt);
      }
    });
    pnlHoaDon.add(pnlTaoHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 660, -1, -1));

    btnLamMoi.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-renew-30.png"))); // NOI18N
    btnLamMoi.setText("Làm mới");
    btnLamMoi.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnLamMoiActionPerformed(evt);
      }
    });
    pnlHoaDon.add(btnLamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 660, -1, -1));

    txtTenKH.setBackground(new java.awt.Color(255, 204, 204));
    txtTenKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    txtTenKH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    txtTenKH.setOpaque(false);
    pnlHoaDon.add(txtTenKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 150, 30));

    txtSDTKH.setBackground(new java.awt.Color(255, 204, 204));
    txtSDTKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    txtSDTKH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    txtSDTKH.setOpaque(false);
    txtSDTKH.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtSDTKHKeyReleased(evt);
      }
    });
    pnlHoaDon.add(txtSDTKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 200, 30));

    lblNotification.setFont(new java.awt.Font("Dialog", 3, 10)); // NOI18N
    lblNotification.setForeground(new java.awt.Color(255, 102, 102));
    pnlHoaDon.add(lblNotification, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 150, 20));

    BGHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    BGHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlHoaDon.add(BGHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 720));

    getContentPane().add(pnlHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, -1, 720));

    pnlKhachHang.setBackground(new java.awt.Color(255, 255, 255));
    pnlKhachHang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-google-web-search-50.png"))); // NOI18N
    jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    pnlKhachHang.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 40, 30));

    btnThemKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnThemKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-row-30.png"))); // NOI18N
    btnThemKH.setText("Thêm");
    btnThemKH.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnThemKH.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnThemKHActionPerformed(evt);
      }
    });
    pnlKhachHang.add(btnThemKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 670, -1, -1));

    txtTKKH.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKKH.setForeground(new java.awt.Color(153, 153, 153));
    txtTKKH.setText("Nhập vào khách hàng cần tìm...");
    txtTKKH.setOpaque(false);
    txtTKKH.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKKHFocusGained(evt);
      }
    });
    txtTKKH.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKKHKeyReleased(evt);
      }
    });
    pnlKhachHang.add(txtTKKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 20, 290, 30));

    btnXoaKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnXoaKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-bin-30.png"))); // NOI18N
    btnXoaKH.setText("Xoá");
    btnXoaKH.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnXoaKH.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnXoaKHActionPerformed(evt);
      }
    });
    pnlKhachHang.add(btnXoaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 670, -1, -1));

    btnSuaKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    btnSuaKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-property-30.png"))); // NOI18N
    btnSuaKH.setText("Sửa");
    btnSuaKH.setMargin(new java.awt.Insets(2, 5, 2, 5));
    btnSuaKH.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSuaKHActionPerformed(evt);
      }
    });
    pnlKhachHang.add(btnSuaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 670, -1, -1));

    jScrollPane7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblKH.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"099999999", "Tết đến trồ", "Huế", "Lam@gmail.com", "Nam"},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null}
      },
      new String [] {
        "SĐT", "Tên khách hàng", "Địa chỉ", "Email", "Giới tính"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, true, true, true
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblKH.setFocusable(false);
    tblKH.setOpaque(false);
    tblKH.setRowHeight(25);
    tblKH.setRowMargin(3);
    tblKH.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblKH.setShowVerticalLines(false);
    tblKH.getTableHeader().setReorderingAllowed(false);
    jScrollPane7.setViewportView(tblKH);
    if (tblKH.getColumnModel().getColumnCount() > 0) {
      tblKH.getColumnModel().getColumn(0).setMinWidth(160);
      tblKH.getColumnModel().getColumn(0).setPreferredWidth(160);
      tblKH.getColumnModel().getColumn(0).setMaxWidth(160);
      tblKH.getColumnModel().getColumn(4).setMinWidth(120);
      tblKH.getColumnModel().getColumn(4).setPreferredWidth(120);
      tblKH.getColumnModel().getColumn(4).setMaxWidth(120);
    }
    JTableHeader tableHeaderKH = tblKH.getTableHeader();     
    tableHeaderKH.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderKH.setBackground(new Color(0,147,223));     
    tableHeaderKH.setOpaque(false);
    tableHeaderKH.setForeground(Color.white);

    pnlKhachHang.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1010, 580));

    jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlKhachHang.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 720));

    getContentPane().add(pnlKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1050, 720));

    pnlThongKe.setBackground(new java.awt.Color(255, 255, 255));
    pnlThongKe.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    navTK.setOpaque(false);
    navTK.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    pnlNavDoanhThu.setBackground(new java.awt.Color(255, 255, 255));
    pnlNavDoanhThu.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlNavDoanhThuMousePressed(evt);
      }
    });
    pnlNavDoanhThu.setLayout(new java.awt.CardLayout());

    lblTKDT.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblTKDT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTKDT.setText("Doanh thu");
    lblTKDT.setFocusCycleRoot(true);
    pnlNavDoanhThu.add(lblTKDT, "card2");

    navTK.add(pnlNavDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 120, 40));

    pnlNavKhoHang.setBackground(new java.awt.Color(255, 255, 255));
    pnlNavKhoHang.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlNavKhoHangMousePressed(evt);
      }
    });
    pnlNavKhoHang.setLayout(new java.awt.CardLayout());

    lblTKKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblTKKH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTKKH.setText("Kho hàng");
    lblTKKH.setFocusCycleRoot(true);
    pnlNavKhoHang.add(lblTKKH, "card2");

    navTK.add(pnlNavKhoHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 40));

    pnlNavHoaDon.setBackground(new java.awt.Color(255, 255, 255));
    pnlNavHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlNavHoaDonMousePressed(evt);
      }
    });
    pnlNavHoaDon.setLayout(new java.awt.CardLayout());

    lblTKHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblTKHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTKHD.setText("Hoá đơn");
    lblTKHD.setFocusCycleRoot(true);
    pnlNavHoaDon.add(lblTKHD, "card2");

    navTK.add(pnlNavHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 110, 40));

    pnlNavKHTQ.setBackground(new java.awt.Color(255, 255, 255));
    pnlNavKHTQ.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        pnlNavKHTQMousePressed(evt);
      }
    });
    pnlNavKHTQ.setLayout(new java.awt.CardLayout());

    lblTKKHTQ.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    lblTKKHTQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTKKHTQ.setText("Khách hàng thân quen");
    lblTKKHTQ.setFocusCycleRoot(true);
    pnlNavKHTQ.add(lblTKKHTQ, "card2");

    navTK.add(pnlNavKHTQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 180, 40));

    pnlThongKe.add(navTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1020, 40));

    pnlTKDT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
    pnlTKDT.setOpaque(false);

    jScrollPane11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblTKDT.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblTKDT.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Thời gian", "Tổng hoá đơn", "Tổng doanh thu", "Thu nhạp cao nhất", "Thu nhập trung bình", "Thu nhập thấp nhất"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblTKDT.setFocusable(false);
    tblTKDT.setOpaque(false);
    tblTKDT.setRowHeight(25);
    tblTKDT.setRowMargin(3);
    tblTKDT.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblTKDT.setShowVerticalLines(false);
    tblTKDT.getTableHeader().setReorderingAllowed(false);
    jScrollPane11.setViewportView(tblTKDT);
    JTableHeader tableHeaderTKDT = tblTKDT.getTableHeader();     
    tableHeaderTKDT.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderTKDT.setBackground(new Color(0,147,223));     
    tableHeaderTKDT.setOpaque(false);
    tableHeaderTKDT.setForeground(Color.white);

    cboTieuChi.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    cboTieuChi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Tháng", "Năm" }));
    cboTieuChi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    cboTieuChi.setOpaque(false);
    cboTieuChi.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cboTieuChiActionPerformed(evt);
      }
    });

    txtTKDT.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKDT.setForeground(new java.awt.Color(153, 153, 153));
    txtTKDT.setText("Nhập vào ngày, tháng, năm cần tìm.....");
    txtTKDT.setOpaque(false);
    txtTKDT.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKDTFocusGained(evt);
      }
    });
    txtTKDT.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKDTKeyReleased(evt);
      }
    });

    lblNotificationDT.setFont(new java.awt.Font("Dialog", 3, 10)); // NOI18N
    lblNotificationDT.setForeground(new java.awt.Color(255, 102, 102));

    javax.swing.GroupLayout pnlTKDTLayout = new javax.swing.GroupLayout(pnlTKDT);
    pnlTKDT.setLayout(pnlTKDTLayout);
    pnlTKDTLayout.setHorizontalGroup(
      pnlTKDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pnlTKDTLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(pnlTKDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
          .addGroup(pnlTKDTLayout.createSequentialGroup()
            .addComponent(cboTieuChi, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(36, 36, 36)
            .addGroup(pnlTKDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(lblNotificationDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(txtTKDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    pnlTKDTLayout.setVerticalGroup(
      pnlTKDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTKDTLayout.createSequentialGroup()
        .addGap(23, 23, 23)
        .addGroup(pnlTKDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cboTieuChi)
          .addComponent(txtTKDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(lblNotificationDT, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    pnlThongKe.add(pnlTKDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1020, 660));

    pnlTKKH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
    pnlTKKH.setOpaque(false);

    jScrollPane10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblTKKH.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblTKKH.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Test 1 phát", "Tết đến trồ", "Tết đến rồi", "100---"},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Tên sản phẩm", "Tổng số lượng", "Số lượng còn lại", "Số lượng đã bán"
      }
    ));
    tblTKKH.setFocusable(false);
    tblTKKH.setOpaque(false);
    tblTKKH.setRowHeight(25);
    tblTKKH.setRowMargin(3);
    tblTKKH.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblTKKH.setShowVerticalLines(false);
    tblTKKH.getTableHeader().setReorderingAllowed(false);
    jScrollPane10.setViewportView(tblTKKH);
    JTableHeader tableHeaderTKKH = tblTKKH.getTableHeader();     
    tableHeaderTKKH.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderTKKH.setBackground(new Color(0,147,223));     
    tableHeaderTKKH.setOpaque(false);
    tableHeaderTKKH.setForeground(Color.white);

    javax.swing.GroupLayout pnlTKKHLayout = new javax.swing.GroupLayout(pnlTKKH);
    pnlTKKH.setLayout(pnlTKKHLayout);
    pnlTKKHLayout.setHorizontalGroup(
      pnlTKKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pnlTKKHLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
        .addContainerGap())
    );
    pnlTKKHLayout.setVerticalGroup(
      pnlTKKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTKKHLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
        .addContainerGap())
    );

    pnlThongKe.add(pnlTKKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1020, 660));

    pnlTKHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
    pnlTKHD.setOpaque(false);

    jScrollPane12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblTKHD.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblTKHD.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Mã hoá đơn", "Người tạo", "Tên khách hàng", "Ngày tạo", "Tổng tiền"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblTKHD.setFocusable(false);
    tblTKHD.setOpaque(false);
    tblTKHD.setRowHeight(25);
    tblTKHD.setRowMargin(3);
    tblTKHD.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblTKHD.setShowVerticalLines(false);
    tblTKHD.getTableHeader().setReorderingAllowed(false);
    tblTKHD.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        tblTKHDMouseClicked(evt);
      }
    });
    jScrollPane12.setViewportView(tblTKHD);
    if (tblTKHD.getColumnModel().getColumnCount() > 0) {
      tblTKHD.getColumnModel().getColumn(0).setMinWidth(100);
      tblTKHD.getColumnModel().getColumn(0).setPreferredWidth(100);
      tblTKHD.getColumnModel().getColumn(0).setMaxWidth(100);
    }
    JTableHeader tableHeaderTKHD = tblTKHD.getTableHeader();     
    tableHeaderTKHD.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderTKHD.setBackground(new Color(0,147,223));     
    tableHeaderTKHD.setOpaque(false);
    tableHeaderTKHD.setForeground(Color.white);

    txtTKHD.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
    txtTKHD.setForeground(new java.awt.Color(153, 153, 153));
    txtTKHD.setText("Nhập vào mã hoá đơn cần tìm.....");
    txtTKHD.setOpaque(false);
    txtTKHD.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtTKHDFocusGained(evt);
      }
    });
    txtTKHD.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTKHDKeyReleased(evt);
      }
    });

    lblNotificationHD.setFont(new java.awt.Font("Dialog", 3, 10)); // NOI18N
    lblNotificationHD.setForeground(new java.awt.Color(255, 102, 102));

    javax.swing.GroupLayout pnlTKHDLayout = new javax.swing.GroupLayout(pnlTKHD);
    pnlTKHD.setLayout(pnlTKHDLayout);
    pnlTKHDLayout.setHorizontalGroup(
      pnlTKHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pnlTKHDLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(pnlTKHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
          .addGroup(pnlTKHDLayout.createSequentialGroup()
            .addGroup(pnlTKHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(txtTKHD, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
              .addComponent(lblNotificationHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    pnlTKHDLayout.setVerticalGroup(
      pnlTKHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTKHDLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(txtTKHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(3, 3, 3)
        .addComponent(lblNotificationHD, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
        .addContainerGap())
    );

    pnlThongKe.add(pnlTKHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1020, 660));

    pnlTKKHTQ.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
    pnlTKKHTQ.setOpaque(false);

    jScrollPane13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));

    tblTKKHTQ.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    tblTKKHTQ.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Test 1 phát", "Tết đến trồ", "Tết đến rồi", "100---"},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Tên khách hàng", "Số điện thoại", "Địa chỉ", "Tổng hoá đơn"
      }
    ));
    tblTKKHTQ.setFocusable(false);
    tblTKKHTQ.setOpaque(false);
    tblTKKHTQ.setRowHeight(25);
    tblTKKHTQ.setRowMargin(3);
    tblTKKHTQ.setSelectionBackground(new java.awt.Color(255, 153, 153));
    tblTKKHTQ.setShowVerticalLines(false);
    tblTKKHTQ.getTableHeader().setReorderingAllowed(false);
    jScrollPane13.setViewportView(tblTKKHTQ);
    JTableHeader tableHeaderTKKHTQ = tblTKKHTQ.getTableHeader();     
    tableHeaderTKKHTQ.setFont(new java.awt.Font("Dialog", 0, 17));
    tableHeaderTKKHTQ.setBackground(new Color(0,147,223));     
    tableHeaderTKKHTQ.setOpaque(false);
    tableHeaderTKKHTQ.setForeground(Color.white);

    javax.swing.GroupLayout pnlTKKHTQLayout = new javax.swing.GroupLayout(pnlTKKHTQ);
    pnlTKKHTQ.setLayout(pnlTKKHTQLayout);
    pnlTKKHTQLayout.setHorizontalGroup(
      pnlTKKHTQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pnlTKKHTQLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
        .addContainerGap())
    );
    pnlTKKHTQLayout.setVerticalGroup(
      pnlTKKHTQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTKKHTQLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
        .addContainerGap())
    );

    pnlThongKe.add(pnlTKKHTQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1020, 660));

    jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bg2.png"))); // NOI18N
    pnlThongKe.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 720));

    getContentPane().add(pnlThongKe, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 1050, 720));

    taskbar.setBackground(new java.awt.Color(204, 204, 204));
    taskbar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        taskbarMouseDragged(evt);
      }
    });
    taskbar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        taskbarMousePressed(evt);
      }
    });

    jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-cat-18.png"))); // NOI18N
    jLabel7.setText("Quản lý shop thú cưng");

    exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/exit.png"))); // NOI18N
    exit.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        exitMouseClicked(evt);
      }
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        exitMouseEntered(evt);
      }
      public void mouseExited(java.awt.event.MouseEvent evt) {
        exitMouseExited(evt);
      }
    });

    minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/minimize.png"))); // NOI18N
    minimize.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        minimizeMouseClicked(evt);
      }
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        minimizeMouseEntered(evt);
      }
      public void mouseExited(java.awt.event.MouseEvent evt) {
        minimizeMouseExited(evt);
      }
    });

    javax.swing.GroupLayout taskbarLayout = new javax.swing.GroupLayout(taskbar);
    taskbar.setLayout(taskbarLayout);
    taskbarLayout.setHorizontalGroup(
      taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(taskbarLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel7)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1054, Short.MAX_VALUE)
        .addComponent(minimize)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(exit)
        .addContainerGap())
    );
    taskbarLayout.setVerticalGroup(
      taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(taskbarLayout.createSequentialGroup()
        .addGroup(taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(exit)
          .addComponent(minimize)
          .addComponent(jLabel7))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    getContentPane().add(taskbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 20));

    BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/BG.png"))); // NOI18N
    BG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
    getContentPane().add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1290, 750));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void pnlDKHDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDKHDMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlDKHD);
    lblDKHD.setForeground(Color.white);
    lblTitle.setText("ĐĂNG KÍ HOÁ ĐƠN");
    hiddenPNL();
    unhidePNL(pnlHoaDon);
  }//GEN-LAST:event_pnlDKHDMousePressed

  private void pnlDKDVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDKDVMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlDKDV);
    lblDKDV.setForeground(Color.white);
    lblTitle.setText("ĐĂNG KÍ DỊCH VỤ");
    hiddenPNL();
    unhidePNL(pnlDichVu);
    fillTableDV();
  }//GEN-LAST:event_pnlDKDVMousePressed

  private void pnlDSSPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDSSPMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlDSSP);
    lbltDSSP.setForeground(Color.white);
    lblTitle.setText("DANH SÁCH SẢN PHẨM");
    hiddenPNL();
    unhidePNL(pnlSanPham);
  }//GEN-LAST:event_pnlDSSPMousePressed

  private void pnlDSKHMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDSKHMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlDSKH);
    lblDSKH.setForeground(Color.white);
    lblTitle.setText("DANH SÁCH KHÁCH HÀNG");
    hiddenPNL();
    unhidePNL(pnlKhachHang);
  }//GEN-LAST:event_pnlDSKHMousePressed

  private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
    // TODO add your handling code here:
    System.exit(0);
  }//GEN-LAST:event_exitMouseClicked

  private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
    // TODO add your handling code here:
    exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/exit-20.png")));
  }//GEN-LAST:event_exitMouseEntered

  private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
    // TODO add your handling code here:
    exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/exit.png")));
  }//GEN-LAST:event_exitMouseExited

  private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
    // TODO add your handling code here:
    this.setState(1);
  }//GEN-LAST:event_minimizeMouseClicked

  private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
    // TODO add your handling code here:
    minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/minimize-20.png")));
  }//GEN-LAST:event_minimizeMouseEntered

  private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
    // TODO add your handling code here:
    minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/minimize.png")));
  }//GEN-LAST:event_minimizeMouseExited

  int xx, xy;
  private void taskbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskbarMousePressed
    // TODO add your handling code here:
    xx = evt.getX();
    xy = evt.getY();
  }//GEN-LAST:event_taskbarMousePressed

  private void taskbarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskbarMouseDragged
    // TODO add your handling code here:
    int x = evt.getXOnScreen();
    int y = evt.getYOnScreen();
    this.setLocation(x - xx, y - xy);
  }//GEN-LAST:event_taskbarMouseDragged

  private void pnlTKMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTKMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlTK);
    lblTK.setForeground(Color.white);
    lblTitle.setText("THỐNG KÊ");
    hiddenPNL();
    unhidePNL(pnlThongKe);
  }//GEN-LAST:event_pnlTKMousePressed

  private void txtTKDVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKDVFocusGained
    // TODO add your handling code here:
    setSearch(txtTKDV);
  }//GEN-LAST:event_txtTKDVFocusGained

  private void txtTKSPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKSPFocusGained
    // TODO add your handling code here:
    setSearch(txtTKSP);
  }//GEN-LAST:event_txtTKSPFocusGained

  private void txtTKKHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKKHFocusGained
    // TODO add your handling code here:
    setSearch(txtTKKH);
  }//GEN-LAST:event_txtTKKHFocusGained

  private void btnThemDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDVActionPerformed
    // TODO add your handling code here:
    themDVDialog dv = new themDVDialog(this, true);
    dv.setVisible(true);
  }//GEN-LAST:event_btnThemDVActionPerformed

  private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
    // TODO add your handling code here:
    themSPDialog sp = new themSPDialog(this, true);
    sp.setVisible(true);
  }//GEN-LAST:event_btnThemSPActionPerformed

  private void txtTKNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKNVFocusGained
    // TODO add your handling code here:
    setSearch(txtTKNV);
  }//GEN-LAST:event_txtTKNVFocusGained

  private void btnThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNVActionPerformed
    // TODO add your handling code here:
    themNVDialog nv = new themNVDialog(this, true);
    nv.setVisible(true);
  }//GEN-LAST:event_btnThemNVActionPerformed

  private void pnlQLNVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlQLNVMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlQLNV);
    lblQLNV.setForeground(Color.white);
    lblTitle.setText("Quản lý nhân viên");
    hiddenPNL();
    unhidePNL(pnlNhanVien);
  }//GEN-LAST:event_pnlQLNVMousePressed

  private void btnThemKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKHActionPerformed
    // TODO add your handling code here:
    themKHDialog kh = new themKHDialog(this, true);
    kh.setVisible(true);
  }//GEN-LAST:event_btnThemKHActionPerformed

  private void mniDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoiMKActionPerformed
    // TODO add your handling code here:
    doiMKDialog dmk = new doiMKDialog(this, true);
    dmk.setVisible(true);
  }//GEN-LAST:event_mniDoiMKActionPerformed

  private void mniDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDangXuatActionPerformed
    // TODO add your handling code here:
    this.setVisible(false);
    new DangNhapDialog(this, true).setVisible(true);
  }//GEN-LAST:event_mniDangXuatActionPerformed

  private void pnlNavDoanhThuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlNavDoanhThuMousePressed
    // TODO add your handling code here:
    fillTableTKDT("{call [sp.DoanhThu_ALLDAY]}");
    cboTieuChi.setSelectedIndex(0);
    resetColorTK();
    setColorTK(pnlNavDoanhThu);
    lblTKDT.setForeground(Color.white);
    hiddenPNLTK();
    unhidePNL(pnlTKDT);

  }//GEN-LAST:event_pnlNavDoanhThuMousePressed

  private void pnlNavKhoHangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlNavKhoHangMousePressed
    // TODO add your handling code here:
    fillTableTKKH();
    resetColorTK();
    setColorTK(pnlNavKhoHang);
    lblTKKH.setForeground(Color.white);
    hiddenPNLTK();
    unhidePNL(pnlTKKH);
  }//GEN-LAST:event_pnlNavKhoHangMousePressed

  private void pnlNavHoaDonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlNavHoaDonMousePressed
    // TODO add your handling code here:
    fillTableTKHD();
    txtTKHD.setText("");
    lblNotificationHD.setText("");
    resetColorTK();
    setColorTK(pnlNavHoaDon);
    lblTKHD.setForeground(Color.white);
    hiddenPNLTK();
    unhidePNL(pnlTKHD);
  }//GEN-LAST:event_pnlNavHoaDonMousePressed

  private void pnlNavKHTQMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlNavKHTQMousePressed
    // TODO add your handling code here:
    fillTableTKKHTQ();
    resetColorTK();
    setColorTK(pnlNavKHTQ);
    lblTKKHTQ.setForeground(Color.white);
    hiddenPNLTK();
    unhidePNL(pnlTKKHTQ);
  }//GEN-LAST:event_pnlNavKHTQMousePressed

  private void pnlDKLHDVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDKLHDVMousePressed
    // TODO add your handling code here:
    resetColor();
    setColor(pnlDKLHDV);
    lblDKLHDV.setForeground(Color.white);
    lblTitle.setText("LOẠI HÌNH DỊCH VỤ");
    hiddenPNL();
    unhidePNL(pnlLHDichVu);
  }//GEN-LAST:event_pnlDKLHDVMousePressed

  private void txtTKLHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKLHFocusGained
    // TODO add your handling code here:
    setSearch(txtTKLH);
  }//GEN-LAST:event_txtTKLHFocusGained

  private void mniTTCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTTCNActionPerformed
    // TODO add your handling code here:
    new TTCNDialog(this, true).setVisible(true);
  }//GEN-LAST:event_mniTTCNActionPerformed

  private void btnSuaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNVActionPerformed
    // TODO add your handling code here:
    updateNV();
  }//GEN-LAST:event_btnSuaNVActionPerformed

  private void pnlXoaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnlXoaNVActionPerformed
    // TODO add your handling code here:
    deleteNV();
  }//GEN-LAST:event_pnlXoaNVActionPerformed

  private void txtTKNVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKNVKeyReleased
    // TODO add your handling code here:
    searchNV();
  }//GEN-LAST:event_txtTKNVKeyReleased

  private void txtTKLHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKLHKeyReleased
    // TODO add your handling code here:
    searchLH();
  }//GEN-LAST:event_txtTKLHKeyReleased

  private void txtTKSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKSPKeyReleased
    // TODO add your handling code here:
    searchSP();
  }//GEN-LAST:event_txtTKSPKeyReleased

  private void txtTKDVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKDVKeyReleased
    // TODO add your handling code here:
    searchDV();
  }//GEN-LAST:event_txtTKDVKeyReleased

  private void btnXoaDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDVActionPerformed
    // TODO add your handling code here:
    deleteDV();
    resetTable();
  }//GEN-LAST:event_btnXoaDVActionPerformed

  private void btnSuaDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDVActionPerformed
    // TODO add your handling code here:
    updateDV();
    resetTable();
  }//GEN-LAST:event_btnSuaDVActionPerformed

  private void btnThemLHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemLHActionPerformed
    // TODO add your handling code here:
    themLH();
  }//GEN-LAST:event_btnThemLHActionPerformed

  private void btnXoaLHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaLHActionPerformed
    // TODO add your handling code here:
    deleteLH();
  }//GEN-LAST:event_btnXoaLHActionPerformed

  private void btnSuaLHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaLHActionPerformed
    // TODO add your handling code here:
    updateLH();
  }//GEN-LAST:event_btnSuaLHActionPerformed

  private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
    // TODO add your handling code here:
    deleteSP();
  }//GEN-LAST:event_btnXoaSPActionPerformed

  private void btnSuaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPActionPerformed
    // TODO add your handling code here:
    updateSP();
  }//GEN-LAST:event_btnSuaSPActionPerformed

  private void txtTKHDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKHDFocusGained
    // TODO add your handling code here:
    setSearch(txtTKHD);
  }//GEN-LAST:event_txtTKHDFocusGained

  private void btnXoaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKHActionPerformed
    // TODO add your handling code here:
    deleteKH();
  }//GEN-LAST:event_btnXoaKHActionPerformed

  private void btnSuaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaKHActionPerformed
    // TODO add your handling code here:
    updateKH();
  }//GEN-LAST:event_btnSuaKHActionPerformed

  private void txtTKKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKKHKeyReleased
    // TODO add your handling code here:
    searchKH();
  }//GEN-LAST:event_txtTKKHKeyReleased

  private void cboLoaiHinhDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiHinhDVActionPerformed
    // TODO add your handling code here:
    selectLH();
  }//GEN-LAST:event_cboLoaiHinhDVActionPerformed

  private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
    // TODO add your handling code here:
    resetTable();
  }//GEN-LAST:event_btnLamMoiActionPerformed

  private void pnlXoaHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnlXoaHangActionPerformed
    // TODO add your handling code here:
    deleteRowHD();
  }//GEN-LAST:event_pnlXoaHangActionPerformed

  private void dsDVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsDVMousePressed
    // TODO add your handling code here:
    selectDV();
  }//GEN-LAST:event_dsDVMousePressed

  private void dsSPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsSPMousePressed
    // TODO add your handling code here:
    selectSP();
  }//GEN-LAST:event_dsSPMousePressed

  private void txtSDTKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKHKeyReleased
    // TODO add your handling code here:
    checkKH();
  }//GEN-LAST:event_txtSDTKHKeyReleased

  private void pnlTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnlTaoHDActionPerformed
    // TODO add your handling code here:
    createHD();
  }//GEN-LAST:event_pnlTaoHDActionPerformed

  private void txtTKHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKHDKeyReleased
    // TODO add your handling code here:
    searchHD();
  }//GEN-LAST:event_txtTKHDKeyReleased

  private void tblHDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDMousePressed
    // TODO add your handling code here:
    totalMoney();
  }//GEN-LAST:event_tblHDMousePressed

  private void cboTieuChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTieuChiActionPerformed
    selectTieuChi();
    txtTKDT.setText("");
  }//GEN-LAST:event_cboTieuChiActionPerformed

  public void selectTieuChi() {
    // TODO add your handling code here:
    int indexCboTieuChi = cboTieuChi.getSelectedIndex();
    if (indexCboTieuChi == 0) {
      fillTableTKDT("{call [sp.DoanhThu_ALLDAY]}");
    } else if (indexCboTieuChi == 1) {
      fillTableTKDT("{call [sp.DoanhThu_ALLMONTH]}");
    } else if (indexCboTieuChi == 2) {
      fillTableTKDT("{call [sp.DoanhThu_ALLYEAR]}");
    }
  }

  private void tblTKHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTKHDMouseClicked
    // TODO add your handling code here:
    cthdDAO = new ChiTietHoaDonDAO();
    connect = new JdbcHelper();
    int indexHD = tblTKHD.getSelectedRow();
    maHD = String.valueOf(tblTKHD.getValueAt(indexHD, 0));
    new HDCTDialog(this, true).setVisible(true);
  }//GEN-LAST:event_tblTKHDMouseClicked

  private void txtTKDTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTKDTFocusGained
    // TODO add your handling code here:
    setSearch(txtTKDT);
  }//GEN-LAST:event_txtTKDTFocusGained

  private void txtTKDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKDTKeyReleased
    // TODO add your handling code here:
    if (txtTKDT.getText().equals("")) {
      selectTieuChi();
    } else {
      try {
        int Timkiem = Integer.parseInt(txtTKDT.getText());
        int indexCboTieuChi = cboTieuChi.getSelectedIndex();
        lblNotificationDT.setText("");
        if (indexCboTieuChi == 0) {
          fillTableTKDT("{call [sp.DoanhThu_Ngay](?)}", Timkiem);
        } else if (indexCboTieuChi == 1) {
          fillTableTKDT("{call [sp.DoanhThu_Thang](?)}", Timkiem);
        } else if (indexCboTieuChi == 2) {
          fillTableTKDT("{call [sp.DoanhThu_Nam](?)}", Timkiem);
        }
      } catch (Exception e) {
        lblNotificationDT.setText("Định dạng tìm kiếm lỗi !!");
      }
    }
  }//GEN-LAST:event_txtTKDTKeyReleased

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Windows".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(TrangChuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(TrangChuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(TrangChuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(TrangChuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        DangNhapDialog dialog = new DangNhapDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
//        TrangChuFrame a = new TrangChuFrame();
//        a.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel BG;
  private javax.swing.JLabel BGHD;
  private javax.swing.JPanel User;
  private javax.swing.JButton btnLamMoi;
  private javax.swing.JButton btnSuaDV;
  private javax.swing.JButton btnSuaKH;
  private javax.swing.JButton btnSuaLH;
  private javax.swing.JButton btnSuaNV;
  private javax.swing.JButton btnSuaSP;
  private javax.swing.JButton btnThemDV;
  private javax.swing.JButton btnThemKH;
  private javax.swing.JButton btnThemLH;
  private javax.swing.JButton btnThemNV;
  private javax.swing.JButton btnThemSP;
  private javax.swing.JButton btnXoaDV;
  private javax.swing.JButton btnXoaKH;
  private javax.swing.JButton btnXoaLH;
  private javax.swing.JButton btnXoaSP;
  public static javax.swing.JComboBox<String> cboLoaiHinhDV;
  private javax.swing.JComboBox<String> cboTieuChi;
  public static javax.swing.JList<String> dsDV;
  public static javax.swing.JList<String> dsSP;
  private javax.swing.JLabel exit;
  private javax.swing.ButtonGroup groupTKTKDT;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane10;
  private javax.swing.JScrollPane jScrollPane11;
  private javax.swing.JScrollPane jScrollPane12;
  private javax.swing.JScrollPane jScrollPane13;
  private javax.swing.JScrollPane jScrollPane14;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JScrollPane jScrollPane4;
  private javax.swing.JScrollPane jScrollPane5;
  private javax.swing.JScrollPane jScrollPane6;
  private javax.swing.JScrollPane jScrollPane7;
  private javax.swing.JScrollPane jScrollPane8;
  private javax.swing.JScrollPane jScrollPane9;
  private javax.swing.JLabel lblDKDV;
  public static javax.swing.JLabel lblDKHD;
  private javax.swing.JLabel lblDKLHDV;
  private javax.swing.JLabel lblDSKH;
  private javax.swing.JLabel lblGhiChuLH;
  private javax.swing.JLabel lblLoaiHinhDV;
  private javax.swing.JLabel lblLoaiHinhDV1;
  private javax.swing.JLabel lblLoaiHinhDV2;
  private javax.swing.JLabel lblMaLH;
  private javax.swing.JLabel lblNVHD;
  private javax.swing.JLabel lblNVHD1;
  private javax.swing.JLabel lblNgayTaoHD;
  private javax.swing.JLabel lblNgayTaoHD1;
  private javax.swing.JLabel lblNotification;
  private javax.swing.JLabel lblNotificationDT;
  private javax.swing.JLabel lblNotificationHD;
  private javax.swing.JLabel lblQLNV;
  private javax.swing.JLabel lblSDTKH1;
  private javax.swing.JLabel lblSDTKH3;
  private javax.swing.JLabel lblTK;
  public static javax.swing.JLabel lblTKDT;
  public static javax.swing.JLabel lblTKHD;
  public static javax.swing.JLabel lblTKKH;
  public static javax.swing.JLabel lblTKKHTQ;
  private javax.swing.JLabel lblTenLH;
  private javax.swing.JLabel lblTenNV;
  private javax.swing.JLabel lblTime;
  private javax.swing.JLabel lblTitle;
  private javax.swing.JLabel lblTongTien;
  private javax.swing.JLabel lblUser;
  private javax.swing.JLabel lbltDSSP;
  private javax.swing.JLabel minimize;
  private javax.swing.JMenuItem mniDangXuat;
  private javax.swing.JMenuItem mniDoiMK;
  private javax.swing.JMenuItem mniHuy;
  private javax.swing.JMenuItem mniTTCN;
  private javax.swing.JPanel navTK;
  private javax.swing.JPanel navbar;
  private javax.swing.JPanel pnlDKDV;
  public static javax.swing.JPanel pnlDKHD;
  private javax.swing.JPanel pnlDKLHDV;
  private javax.swing.JPanel pnlDSKH;
  private javax.swing.JPanel pnlDSSP;
  public static javax.swing.JPanel pnlDichVu;
  public static javax.swing.JPanel pnlHoaDon;
  public static javax.swing.JPanel pnlKhachHang;
  public static javax.swing.JPanel pnlLHDichVu;
  private javax.swing.JPanel pnlLeft;
  public static javax.swing.JPanel pnlNavDoanhThu;
  public static javax.swing.JPanel pnlNavHoaDon;
  public static javax.swing.JPanel pnlNavKHTQ;
  public static javax.swing.JPanel pnlNavKhoHang;
  public static javax.swing.JPanel pnlNhanVien;
  private javax.swing.JPanel pnlQLNV;
  public static javax.swing.JPanel pnlSanPham;
  private javax.swing.JPanel pnlTK;
  private javax.swing.JPanel pnlTKDT;
  private javax.swing.JPanel pnlTKHD;
  private javax.swing.JPanel pnlTKKH;
  private javax.swing.JPanel pnlTKKHTQ;
  private javax.swing.JButton pnlTaoHD;
  public static javax.swing.JPanel pnlThongKe;
  private javax.swing.JButton pnlXoaHang;
  private javax.swing.JButton pnlXoaNV;
  private javax.swing.JPopupMenu popup;
  private javax.swing.JPanel taskbar;
  public static javax.swing.JTable tblDV;
  private javax.swing.JTable tblHD;
  public static javax.swing.JTable tblKH;
  public static javax.swing.JTable tblLHDV;
  public static javax.swing.JTable tblNV;
  public static javax.swing.JTable tblSP;
  private javax.swing.JTable tblTKDT;
  private javax.swing.JTable tblTKHD;
  private javax.swing.JTable tblTKKH;
  private javax.swing.JTable tblTKKHTQ;
  private javax.swing.JTextArea txtGhiChuHD;
  private javax.swing.JTextArea txtGhiChuLH;
  private javax.swing.JTextField txtMaLH;
  private javax.swing.JTextField txtSDTKH;
  private javax.swing.JTextField txtTKDT;
  private javax.swing.JTextField txtTKDV;
  private javax.swing.JTextField txtTKHD;
  public static javax.swing.JTextField txtTKKH;
  private javax.swing.JTextField txtTKLH;
  public static javax.swing.JTextField txtTKNV;
  private javax.swing.JTextField txtTKSP;
  private javax.swing.JTextField txtTenKH;
  private javax.swing.JTextField txtTenLH;
  // End of variables declaration//GEN-END:variables

  void customUI() {
    try {
      for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Windows".equals(info.getName())) {
          UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  void security() {
    if (Auth.user.isVaiTro()) {
      lblUser.setText(getTenshort());
      set(true);

      //set hoa don
      lblTenNV.setText(Auth.user.getTenNV() + " (Quản lý)");
      lblTenNV.setToolTipText(Auth.user.getTenNV() + " (Quản lý)");
      lblNgayTaoHD.setText(DateHelper.toString(DateHelper.now(), "dd-MM-yyyy"));
    } else {
      lblUser.setText(getTenshort());
      set(false);

      //set hoa don
      lblTenNV.setText(Auth.user.getTenNV());
      lblTenNV.setToolTipText(Auth.user.getTenNV());
      lblNgayTaoHD.setText(DateHelper.toString(DateHelper.now(), "dd-MM-yyyy"));
      set(false);
    }
  }
  
  void set(boolean check) {
    btnXoaDV.setVisible(check);
    btnThemDV.setVisible(check);
    btnSuaDV.setVisible(check);
    btnXoaKH.setVisible(check);
    btnSuaKH.setVisible(check);
    btnThemKH.setVisible(check);
    btnXoaLH.setVisible(check);
    btnSuaLH.setVisible(check);
    btnThemLH.setVisible(check);
//    lblMaLH.setVisible(check);
//    lblTenLH.setVisible(check);
//    lblGhiChuLH.setVisible(check);
    txtMaLH.setEditable(check);
    txtTenLH.setEditable(check);
    txtGhiChuLH.setEditable(check);
    btnXoaSP.setVisible(check);
    btnSuaSP.setVisible(check);
    btnThemSP.setVisible(check);
    pnlQLNV.setVisible(check);
    pnlNavDoanhThu.setVisible(check);
  }

  String getTenshort() {
    String name = Auth.user.getTenNV();
    String a[] = name.split(" ");
    if (a.length >= 2) {
      name = a[a.length - 2] + " " + a[a.length - 1];
    }
    return name;
  }

  void init() {
    new Timer(1000, new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm a  dd MMM,yyyy");
        LocalDateTime now = LocalDateTime.now();
        lblTime.setText(now.format(dtf).toString());
      }
    }).start();

    //Ket noi csdl
    connect = new JdbcHelper();
    //set giao dien
    this.setLocationRelativeTo(null);
    URL path = TrangChuFrame.class.getResource("/Image/fav.png");
    this.setIconImage(new ImageIcon(path).getImage());

    //set mac dinh
    resetColor();
    setColor(pnlDKHD);
    lblDKHD.setForeground(Color.white);
    lblTitle.setText("ĐĂNG KÍ HOÁ ĐƠN");
    hiddenPNL();
    unhidePNL(pnlHoaDon);

    //set mac dinh Thong Ke
    resetColorTK();
    setColorTK(pnlNavKhoHang);
    lblTKKH.setForeground(Color.white);
    hiddenPNLTK();
    unhidePNL(pnlTKKH);

    //set ten mni
    setNameMni();

    //fill table
    fillTableNV();
    fillTableLH();
    fillTableDV();
    fillTableSP();
    fillTableKH();
    fillTableTKKH();
    fillTableTKKHTQ();
    fillTableTKHD();
    fillTableTKDT("{call [sp.DoanhThu_ALLDAY]}");

    //fillCombobox
    fillCboLH();

    //fillList
    fillListDV();
    fillListSP();

    listSPselect = new ArrayList<>();
    listDVselect = new ArrayList<>();
  }

  void setColor(JPanel pane) {
    pane.setBackground(new Color(99, 184, 255));
  }

  void setColorTK(JPanel pane) {
    pane.setBackground(new Color(164, 119, 106));
  }

  void resetColor() {
    pnlDKHD.setBackground(new java.awt.Color(236, 252, 246));
    pnlDKDV.setBackground(new java.awt.Color(236, 252, 246));
    pnlDSSP.setBackground(new java.awt.Color(236, 252, 246));
    pnlDSKH.setBackground(new java.awt.Color(236, 252, 246));
    pnlTK.setBackground(new java.awt.Color(236, 252, 246));
    pnlQLNV.setBackground(new java.awt.Color(236, 252, 246));
    pnlDKLHDV.setBackground(new java.awt.Color(236, 252, 246));
    lblDKHD.setForeground(Color.black);
    lblDKDV.setForeground(Color.black);
    lbltDSSP.setForeground(Color.black);
    lblDSKH.setForeground(Color.black);
    lblTK.setForeground(Color.black);
    lblQLNV.setForeground(Color.black);
    lblDKLHDV.setForeground(Color.black);
  }

  void resetColorTK() {
    pnlNavKhoHang.setBackground(Color.white);
    pnlNavDoanhThu.setBackground(Color.white);
    pnlNavKHTQ.setBackground(Color.white);
    pnlNavHoaDon.setBackground(Color.white);
    lblTKHD.setForeground(Color.black);
    lblTKDT.setForeground(Color.black);
    lblTKKH.setForeground(Color.black);
    lblTKKHTQ.setForeground(Color.black);
  }

  void hiddenPNL() {
    pnlHoaDon.setVisible(false);
    pnlDichVu.setVisible(false);
    pnlSanPham.setVisible(false);
    pnlKhachHang.setVisible(false);
    pnlThongKe.setVisible(false);
    pnlNhanVien.setVisible(false);
    pnlLHDichVu.setVisible(false);
  }

  void hiddenPNLTK() {
    pnlTKDT.setVisible(false);
    pnlTKHD.setVisible(false);
    pnlTKKH.setVisible(false);
    pnlTKKHTQ.setVisible(false);
  }

  void unhidePNL(JPanel pnl) {
    pnl.setVisible(true);
  }

  void setSearch(JTextField field) {
    field.setText("");
    field.setForeground(Color.black);
    field.setFont(new Font("Dialog", 0, 16));
  }

  void setNameMni() {
    mniDangXuat.setText("Đăng xuất");
    mniTTCN.setText("Xem thông tin cá nhân");
    mniDoiMK.setText("Đổi mật khẩu");
    mniHuy.setText("Huỷ");
  }

//  ----------------------------------Nhân VIên-------------------------------------
  void fillTableNV() {
    nvDAO = new NhanVienDao();
    listNV = nvDAO.getNhanVienOnlyNV(connect);
    DefaultTableModel model = (DefaultTableModel) tblNV.getModel();
    model.setRowCount(0);
    int STT = 1;
    for (NhanVien nv : listNV) {
      String ngaySinh = DateHelper.toString(nv.getNgaySinh(), "dd-MM-yyyy");
      model.addRow(new Object[]{
        STT, nv.getMaNV(), nv.getTenNV(), ngaySinh, nv.getDiaChi(), nv.getEmail(), nv.getSDT(), nv.getNgayVaoLam(), nv.getLuong()
      });
      STT++;
    }
  }

  void fillTableNV(String maNV) {
    nvDAO = new NhanVienDao();
    listNV = nvDAO.getNhanVienOnlyNVbyMaNV(maNV, connect);
    DefaultTableModel model = (DefaultTableModel) tblNV.getModel();
    model.setRowCount(0);
    int STT = 1;
    for (NhanVien nv : listNV) {
      String ngaySinh = DateHelper.toString(nv.getNgaySinh(), "dd-MM-yyyy");
      model.addRow(new Object[]{
        STT, nv.getMaNV(), nv.getTenNV(), ngaySinh, nv.getDiaChi(), nv.getEmail(), nv.getSDT(), nv.getNgayVaoLam(), nv.getLuong()
      });
      STT++;
    }
  }

  void updateNV() {
    String hoTen, diaChi, Email, SDT, maNV;
    Date ngaySinh;
    double luong;
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      try {
        Date date = DateHelper.toDate(String.valueOf(tblNV.getValueAt(i, 3)), "dd-MM-yyyy");
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng ngày ! hãy nhập theo định dạng (ngày-tháng-năm)", "Lỗi", HEIGHT);
        fillTableNV();
        return;
      }
    }
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      String TenNV = String.valueOf(tblNV.getValueAt(i, 2));
      if (TenNV.length() == 0) {
        JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống !\n Cập nhật thông tin nhân viên không thành công!", "Thông báo", WIDTH);
        return;
      }
    }
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      String MK = String.valueOf(tblNV.getValueAt(i, 6));
      String patternSDT = "[0][0-9]{9}";
      if (MK.length() == 0) {
        JOptionPane.showMessageDialog(this, "Sđt không được để trống !\n Cập nhật thông tin nhân viên không thành công!", "Thông báo", WIDTH);
        return;
      } else if (!Pattern.matches(patternSDT, MK)) {
        JOptionPane.showMessageDialog(this, "Hãy nhập đúng định dạng SĐT ! (0**********)", "Lỗi", HEIGHT);
        return;
      }
    }
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      String diaChid = String.valueOf(tblNV.getValueAt(i, 4));
      if (diaChid.length() == 0) {
        JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống !\n Cập nhật thông tin nhân viên không thành công!", "Thông báo", WIDTH);
        return;
      }
    }
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      try {
        double number = Double.parseDouble(String.valueOf(tblNV.getValueAt(i, 8)));
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng lương !", "Lỗi", HEIGHT);
        fillTableNV();
        return;
      }
    }
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      String pattern = "^[\\w]+@.+";
      if (!Pattern.matches(pattern, String.valueOf(tblNV.getValueAt(i, 5)))) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng Email !", "Lỗi", HEIGHT);
        fillTableNV();
        return;
      }
    }
    for (int i = 0; i < tblNV.getRowCount(); i++) {
      hoTen = String.valueOf(tblNV.getValueAt(i, 2));
      ngaySinh = DateHelper.toDate(String.valueOf(tblNV.getValueAt(i, 3)), "dd-MM-yyyy");
      diaChi = String.valueOf(tblNV.getValueAt(i, 4));
      Email = String.valueOf(tblNV.getValueAt(i, 5));
      SDT = String.valueOf(tblNV.getValueAt(i, 6));
      luong = Double.parseDouble(String.valueOf(tblNV.getValueAt(i, 8)));
      maNV = String.valueOf(tblNV.getValueAt(i, 1));
      if (nvDAO.updateNV(hoTen, ngaySinh, diaChi, Email, SDT, luong, maNV, connect) != 1) {
        JOptionPane.showMessageDialog(this, "Sửa thất bại ở dòng " + (i + 1) + " !", "Lỗi", HEIGHT);
      }
    }
    fillTableNV();
    txtTKNV.setText("");
    JOptionPane.showMessageDialog(this, "Sửa thành công !");
  }

  void deleteNV() {
    int indexNV = tblNV.getSelectedRow();
    if (indexNV < 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn dòng cần xoá !");
      return;
    }
    String maNV = String.valueOf(tblNV.getValueAt((indexNV), 1));
    NhanVien nv = nvDAO.findByMaNV(maNV, connect);
    int o = JOptionPane.showConfirmDialog(this, "Bạn có muốn xoá nhân viên " + nv.getTenNV() + " ra khỏi danh sách !", "Thông báo", JOptionPane.YES_OPTION);
    if (o == 0) {
      if (nvDAO.nvOff(String.valueOf(tblNV.getValueAt(indexNV, 1)), connect) == 1) {
        JOptionPane.showMessageDialog(this, "Xoá thành công !");
        txtTKNV.setText("");
        fillTableNV();
      } else {
        JOptionPane.showMessageDialog(this, "Xoá thất bại !", "Lỗi", HEIGHT);
      }
    }
  }

  void searchNV() {
    fillTableNV(txtTKNV.getText());
  }

  //----------------------------SẢN PHẨM --------------------
  public void fillTableSP() {
    spDAO = new SanPhamDAO();
    listSP = spDAO.getSanPham(connect);
    DefaultTableModel model = (DefaultTableModel) tblSP.getModel();
    model.setRowCount(0);
    for (SanPham sp : listSP) {
      String ngaynhapkho = DateHelper.toString(sp.getNgayNhapKho(), "dd-MM-yyyy");
      model.addRow(new Object[]{
        sp.getMaSP(), sp.getTenSP(), sp.getSoLuong(), sp.getGiaNhap(), sp.getGiaBan(), sp.getGhiChu(), ngaynhapkho
      });
    }
  }

  public void fillTableSP(String MaSP) {
    spDAO = new SanPhamDAO();
    listSP = spDAO.getSanPhamOnlyNVbyMaSP(MaSP, connect);
    DefaultTableModel model = (DefaultTableModel) tblSP.getModel();
    model.setRowCount(0);
    for (SanPham sp : listSP) {
      String ngaynhapkho = DateHelper.toString(sp.getNgayNhapKho(), "dd-MM-yyyy");
      model.addRow(new Object[]{
        sp.getMaSP(), sp.getTenSP(), sp.getSoLuong(), sp.getGiaNhap(), sp.getGiaBan(), sp.getGhiChu(), ngaynhapkho
      });
    }
  }

  void searchSP() {
    fillTableSP(txtTKSP.getText());
  }

  void updateSP() {
    String MaSP, TenSP, GhiChu;
    int SoLuong;
    double GiaNhap, GiaBan;
    Date NgayNhapKho;
    for (int i = 0; i < tblSP.getRowCount(); i++) {
      try {
        Date date = DateHelper.toDate(String.valueOf(tblSP.getValueAt(i, 6)), "dd-MM-yyyy");
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng ngày ! hãy nhập theo định dạng (ngày-tháng-năm)", "Lỗi", HEIGHT);
        fillTableSP();
        return;
      }
    }
    for (int i = 0; i < tblSP.getRowCount(); i++) {
      try {
        double giaban = Double.parseDouble(String.valueOf(tblSP.getValueAt(i, 4)));
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng giá bán !", "Lỗi", HEIGHT);
        fillTableSP();
        return;
      }
    }
    for (int i = 0; i < tblSP.getRowCount(); i++) {
      try {
        double gianhap = Double.parseDouble(String.valueOf(tblSP.getValueAt(i, 3)));
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng giá nhập !", "Lỗi", HEIGHT);
        fillTableSP();
        return;
      }
    }
    for (int i = 0; i < tblSP.getRowCount(); i++) {
      try {
        int soint = Integer.parseInt(String.valueOf(tblSP.getValueAt(i, 2)));
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng số lượng !", "Lỗi", HEIGHT);
        fillTableSP();
        return;
      }
    }
    for (int i = 0; i < tblSP.getRowCount(); i++) {
      TenSP = String.valueOf(tblSP.getValueAt(i, 1));
      NgayNhapKho = DateHelper.toDate(String.valueOf(tblSP.getValueAt(i, 6)), "dd-MM-yyyy");
      GiaBan = Double.parseDouble(String.valueOf(tblSP.getValueAt(i, 4)));
      GiaNhap = Double.parseDouble(String.valueOf(tblSP.getValueAt(i, 3)));
      SoLuong = Integer.parseInt(String.valueOf(tblSP.getValueAt(i, 2)));
      GhiChu = String.valueOf(tblSP.getValueAt(i, 5));
      MaSP = String.valueOf(tblSP.getValueAt(i, 0));
      if (spDAO.updateSP(MaSP, TenSP, GhiChu, SoLuong, GiaNhap, GiaBan, NgayNhapKho, connect) != 1) {
        JOptionPane.showMessageDialog(this, "Sửa thất bại ở dòng " + (i + 1) + " !", "Lỗi", HEIGHT);
      }
    }
    fillTableSP();
    fillListSP();
    txtTKSP.setText("");
    JOptionPane.showMessageDialog(this, "Sửa thành công !");
  }

  void deleteSP() {
    int indexSP = tblSP.getSelectedRow();
    if (indexSP < 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn dòng cần xoá !");
      return;
    }
    int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông Báo Xóa", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (a == JOptionPane.YES_OPTION) {
      if (spDAO.deleteSP(String.valueOf(tblSP.getValueAt(indexSP, 0)), connect) == 1) {
        JOptionPane.showMessageDialog(this, "Xoá thành công !");
        txtTKSP.setText("");
        fillTableSP();
        fillListSP();
      } else {
        JOptionPane.showMessageDialog(this, "Xoá thất bại !", "Lỗi", HEIGHT);
      }
    }
  }

  //---------------------------------LOẠI HÌNH --------------------------------
  StringBuilder validatorLH() {
    StringBuilder sb = new StringBuilder();
    Validator.checkEmpty(txtMaLH, sb, "Mã Sản Phẩm không được để trống !");
    Validator.checkEmpty(txtTenLH, sb, "Tên Sản Phẩm không được để trống !");
    return sb;
  }

  void themLH() {
    if (validatorLH().length() > 0) {
      JOptionPane.showMessageDialog(this, validatorLH() + "Thêm thất bại !", "Lỗi", HEIGHT);
      return;
    }
    connect = new JdbcHelper();
    lhDAO = new LoaiHinhDAO();
    LoaiHinhDichVu lh = lhDAO.findByMaLH(txtMaLH.getText(), connect);
    if (lh != null) {
      JOptionPane.showMessageDialog(this, "Loại Hình có mã " + txtMaLH.getText() + " đã tồn tại !", "Lỗi", HEIGHT);
      txtMaLH.requestFocus();
      return;
    }
    LoaiHinhDichVu lhNew = new LoaiHinhDichVu();
    lhNew.setMaLH(txtMaLH.getText());
    lhNew.setTenLH(txtTenLH.getText());
    lhNew.setGhiChu(txtGhiChuLH.getText());
    if (lhDAO.insertLH(lhNew, connect) == 1) {
      JOptionPane.showMessageDialog(this, "Thêm thành công");
      fillTableLH();
      fillCboLH();
      fillListDV();
      resetLH();
      txtTKLH.setText("");
    } else {
      JOptionPane.showMessageDialog(this, "Thêm thất bại !", "Lỗi", HEIGHT);
    }
  }

  void fillTableLH() {
    lhDAO = new LoaiHinhDAO();
    listLH = lhDAO.getLoaiHinhDichVu(connect);
    DefaultTableModel model = (DefaultTableModel) tblLHDV.getModel();
    model.setRowCount(0);
    for (LoaiHinhDichVu lh : listLH) {
      model.addRow(new Object[]{
        lh.getMaLH(), lh.getTenLH(), lh.getGhiChu()
      });
    }
  }

  void fillTableLH(String MaLH) {
    lhDAO = new LoaiHinhDAO();
    listLH = lhDAO.getLoaiHinhDichVubyMaLH(MaLH, connect);
    DefaultTableModel model = (DefaultTableModel) tblLHDV.getModel();
    model.setRowCount(0);
    for (LoaiHinhDichVu lh : listLH) {
      model.addRow(new Object[]{
        lh.getMaLH(), lh.getTenLH(), lh.getGhiChu()
      });
    }
  }

  void searchLH() {
    fillTableLH(txtTKLH.getText());
  }

  void updateLH() {
    String maLH, tenLH, ghiChu;
    for (int i = 0; i < tblLHDV.getRowCount(); i++) {
      maLH = String.valueOf(tblLHDV.getValueAt(i, 0));
      tenLH = String.valueOf(tblLHDV.getValueAt(i, 1));
      ghiChu = String.valueOf(tblLHDV.getValueAt(i, 2));
      if (lhDAO.updateLH(maLH, tenLH, ghiChu, connect) != 1) {
        JOptionPane.showMessageDialog(this, "Sửa thất bại ở dòng " + (i + 1) + " !", "Lỗi", HEIGHT);
      }
    }
    fillTableLH();
    fillCboLH();
    fillListDV();
    txtTKLH.setText("");
    JOptionPane.showMessageDialog(this, "Sưa thành công !");
  }

  void deleteLH() {
    int indexSP = tblLHDV.getSelectedRow();
    if (indexSP < 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn dòng cần xoá !");
      return;
    }
    int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông Báo Xóa", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (a == JOptionPane.YES_OPTION) {
      dvDAO.deleteDVByMaLH(String.valueOf(tblLHDV.getValueAt(indexSP, 0)), connect);
      if (lhDAO.deleteLH(String.valueOf(tblLHDV.getValueAt(indexSP, 0)), connect) == 1) {
        JOptionPane.showMessageDialog(this, "Xoá thành công !");
        txtTKLH.setText("");
        resetLH();
        fillCboLH();
        fillListDV();
        fillTableLH();
      } else {
        JOptionPane.showMessageDialog(this, "Xoá thất bại !", "Lỗi", HEIGHT);
      }
    }
  }

  void resetLH() {
    txtMaLH.setText("");
    txtGhiChuLH.setText("");
    txtTenLH.setText("");
  }

  //-------------------------------DỊCH VỤ-------------------------------------
  void fillTableDV() {
    dvDAO = new DichVuDAO();
    listDV = dvDAO.getDichVu(connect);
    DefaultTableModel model = (DefaultTableModel) tblDV.getModel();
    model.setRowCount(0);
    for (DichVu dv : listDV) {
      model.addRow(new Object[]{
        dv.getMaLH(), dv.getMaDV(), dv.getTenDV(), dv.getGhiChu()
      });
    }
  }

  void fillTableDV(String MaDV) {
    dvDAO = new DichVuDAO();
    listDV = dvDAO.getDichVubyMaDV(MaDV, connect);
    DefaultTableModel model = (DefaultTableModel) tblDV.getModel();
    model.setRowCount(0);
    for (DichVu dv : listDV) {
      model.addRow(new Object[]{
        dv.getMaLH(), dv.getMaDV(), dv.getTenDV(), dv.getGhiChu()
      });
    }
  }

  void searchDV() {
    fillTableDV(txtTKDV.getText());
  }

  void updateDV() {
    String MaDV, TenDV, MaLH, GhiChu;
    for (int i = 0; i < tblDV.getRowCount(); i++) {
      TenDV = String.valueOf(tblDV.getValueAt(i, 2));
      GhiChu = String.valueOf(tblDV.getValueAt(i, 3));
      MaDV = String.valueOf(tblDV.getValueAt(i, 1));
      MaLH = String.valueOf(tblDV.getValueAt(i, 0));
      if (dvDAO.updateDV(MaDV, TenDV, GhiChu, MaLH, connect) != 1) {
        JOptionPane.showMessageDialog(this, "Sửa thất bại ở dòng " + (i + 1) + " !", "Lỗi", HEIGHT);
      }
    }
    fillTableDV();
    fillListDV();
    txtTKDV.setText("");
    JOptionPane.showMessageDialog(this, "Sửa thành công !");
  }

  void deleteDV() {
    int indexDV = tblDV.getSelectedRow();
    if (indexDV < 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn dòng cần xoá !");
      return;
    }
    int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông Báo Xóa", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (a == JOptionPane.YES_OPTION) {
      if (dvDAO.deleteDV(String.valueOf(tblDV
              .getValueAt(indexDV, 1)), connect) == 1) {
        JOptionPane.showMessageDialog(this, "Xoá thành công !");
        txtTKDV.setText("");
        fillListDV();
        fillTableDV();
      } else {
        JOptionPane.showMessageDialog(this, "Xoá thất bại !", "Lỗi", HEIGHT);
      }
    }
  }

  //----------------------------------Thống kê----------------------------
  void fillTableTKKH() {
    tkDAO = new ThongKeDAO();
    listTKKH = tkDAO.getKhoHang(connect);
    DefaultTableModel model = (DefaultTableModel) tblTKKH.getModel();
    model.setRowCount(0);
    for (Object[] row : listTKKH) {
      model.addRow(new Object[]{
        row[0], row[1], row[2], row[3]
      });
    }
  }

  void fillTableTKKHTQ() {
    tkDAO = new ThongKeDAO();
    listTKKHTQ = tkDAO.getKhachHang(connect);
    DefaultTableModel model = (DefaultTableModel) tblTKKHTQ.getModel();
    model.setRowCount(0);
    for (Object[] row : listTKKHTQ) {
      model.addRow(new Object[]{
        row[0], row[1], row[2], row[3]
      });
    }
  }

  void fillTableTKHD() {
    tkDAO = new ThongKeDAO();
    listTKHD = tkDAO.getHoaDon(connect);
    DefaultTableModel model = (DefaultTableModel) tblTKHD.getModel();
    model.setRowCount(0);
    for (Object[] row : listTKHD) {
      model.addRow(new Object[]{
        row[0], row[1], row[2], row[3], row[4]
      });
    }
  }

  void fillTableTKHD(int maHD) {
    tkDAO = new ThongKeDAO();
    listTKHD = tkDAO.getHoaDonByMaHD(connect, maHD);
    DefaultTableModel model = (DefaultTableModel) tblTKHD.getModel();
    model.setRowCount(0);
    for (Object[] row : listTKHD) {
      model.addRow(new Object[]{
        row[0], row[1], row[2], row[3], row[4]
      });
    }
  }

  void fillTableTKDT(String sql) {
    tkDAO = new ThongKeDAO();
    listTKDT = tkDAO.getDoanhThuHD(connect, sql);
    DefaultTableModel model = (DefaultTableModel) tblTKDT.getModel();
    model.setRowCount(0);
    for (Object[] row : listTKDT) {
      model.addRow(new Object[]{
        row[0], row[1], row[2], row[3], Math.round(Double.parseDouble(String.valueOf(row[4])) * 100) / 100, row[5]
      });
    }
  }

  void fillTableTKDT(String sql, int time) {
    tkDAO = new ThongKeDAO();
    listTKDT = tkDAO.getDoanhThuHD(connect, sql, time);
    DefaultTableModel model = (DefaultTableModel) tblTKDT.getModel();
    model.setRowCount(0);
    for (Object[] row : listTKDT) {
      model.addRow(new Object[]{
        row[0], row[1], row[2], row[3], Math.round(Double.parseDouble(String.valueOf(row[4])) * 100) / 100, row[5]
      });
    }
  }

  void searchHD() {
    if (txtTKHD.getText().equals("")) {
      fillTableTKHD();
      lblNotificationHD.setText("");
    } else {
      try {
        int maHD = Integer.parseInt(txtTKHD.getText());
        fillTableTKHD(maHD);
        lblNotificationHD.setText("");
      } catch (Exception e) {
        lblNotificationHD.setText("Mã hoá đơn không hợp lệ !");
        fillTableTKHD();
      }
    }
  }

  //-------------------------KHÁCH HÀNG--------------------------
  void fillTableKH() {
    khDAO = new KhachHangDAO();
    listKH = khDAO.getKhachHang(connect);
    DefaultTableModel model = (DefaultTableModel) TrangChuFrame.tblKH.getModel();
    model.setRowCount(0);
    for (KhachHang kh : listKH) {
      String gioitinh;
      if (kh.isGioiTinh() == true) {
        gioitinh = "Nam";
      } else {
        gioitinh = "Nữ";
      }
      String TenKH = String.valueOf(kh.getTenKH());
      if (TenKH.equalsIgnoreCase("null")) {
        TenKH = "";
      }
      String DiaChi = String.valueOf(kh.getDiaChi());
      if (DiaChi.equalsIgnoreCase("null")) {
        DiaChi = "";
      }
      String Email = String.valueOf(kh.getEmail());
      if (Email.equalsIgnoreCase("null")) {
        Email = "";
      }
      model.addRow(new Object[]{
        kh.getSDT(), TenKH, DiaChi, Email, gioitinh
      });
    }
  }

  void fillTableKH(String SDT) {
    khDAO = new KhachHangDAO();
    listKH = khDAO.getKhachHangbySDT(SDT, connect);
    DefaultTableModel model = (DefaultTableModel) TrangChuFrame.tblKH.getModel();
    model.setRowCount(0);
    for (KhachHang kh : listKH) {
      String gioitinh = null;
      if (kh.isGioiTinh() == true) {
        gioitinh = "Nam";
      } else {
        gioitinh = "Nữ";
      }
      model.addRow(new Object[]{
        kh.getSDT(), kh.getTenKH(), kh.getDiaChi(), kh.getEmail(), gioitinh
      });
    }
  }

  void searchKH() {
    fillTableKH(txtTKKH.getText());
  }

  void updateKH() {
    String TenKH, DiaChi, SDT, Email;
    boolean GioiTinh;

    for (int i = 0; i < tblKH.getRowCount(); i++) {
      SDT = String.valueOf(tblKH.getValueAt(i, 0));
      TenKH = String.valueOf(tblKH.getValueAt(i, 1));
      DiaChi = String.valueOf(tblKH.getValueAt(i, 2));
      Email = String.valueOf(tblKH.getValueAt(i, 3));
      String checkGT = String.valueOf(tblKH.getValueAt(i, 4));
      if (checkGT.equalsIgnoreCase("Nam")) {
        GioiTinh = true;
      } else if (checkGT.equalsIgnoreCase("Nữ") || checkGT.equalsIgnoreCase("Nu")) {
        GioiTinh = false;
      } else {
        JOptionPane.showMessageDialog(this, "Hãy nhập đúng Giới Tính !", "Lỗi", HEIGHT);
        fillTableKH();
        return;
      }
      if (khDAO.updateKH(SDT, TenKH, Email, DiaChi, GioiTinh, connect) != 1) {
        JOptionPane.showMessageDialog(this, "Sửa thất bại ở dòng " + (i + 1) + " !", "Lỗi", HEIGHT);
      }
    }
    fillTableKH();
    txtTKKH.setText("");
    JOptionPane.showMessageDialog(this, "Sửa thành công !");
  }

  void deleteKH() {
    int indexKH = tblKH.getSelectedRow();
    if (indexKH < 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn dòng cần xoá !");
      return;
    }
    int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông Báo Xóa", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (a == JOptionPane.YES_OPTION) {
      if (khDAO.deleteKH(String.valueOf(tblKH.getValueAt(indexKH, 0)), connect) == 1) {
        JOptionPane.showMessageDialog(this, "Xoá thành công !");
        txtTKKH.setText("");
        fillTableKH();
      } else {
        JOptionPane.showMessageDialog(this, "Xoá thất bại !", "Lỗi", HEIGHT);
      }
    }
  }

//  ------------------------------Hoá đơn------------------------------
  void fillListDV() {
    dvDAO = new DichVuDAO();
    lhDAO = new LoaiHinhDAO();
    dvDAO = new DichVuDAO();
    listLH = lhDAO.getLoaiHinhDichVu(connect);
    listDV = dvDAO.getDichVuByMaLH(connect, listLH.get(0).getMaLH());
    DefaultListModel modelDV = new DefaultListModel<>();
    modelDV.removeAllElements();
    for (DichVu dv : listDV) {
      modelDV.addElement(dv.getTenDV());
    }
    dsDV.setModel(modelDV);
  }

  void fillListSP() {
    spDAO = new SanPhamDAO();
    listSP = spDAO.getSanPham(connect);
    DefaultListModel modelSP = new DefaultListModel<>();
    modelSP.removeAllElements();
    for (SanPham sp : listSP) {
      modelSP.addElement(sp.getTenSP());
    }
    dsSP.setModel(modelSP);
  }

  void fillCboLH() {
    lhDAO = new LoaiHinhDAO();
    listLH = lhDAO.getLoaiHinhDichVu(connect);
    DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiHinhDV.getModel();
    model.removeAllElements();
    for (LoaiHinhDichVu lh : listLH) {
      cboLoaiHinhDV.addItem(lh.getTenLH());
    }
  }

  void selectLH() {
    int indexLH = cboLoaiHinhDV.getSelectedIndex();
    lhDAO = new LoaiHinhDAO();
    listLH = lhDAO.getLoaiHinhDichVu(connect);
    dvDAO = new DichVuDAO();
    if (indexLH == -1) {
      indexLH = 0;
    }
    listDV = dvDAO.getDichVuByMaLH(connect, listLH.get(indexLH).getMaLH());
    DefaultListModel modelDV = new DefaultListModel<>();
    modelDV.removeAllElements();
    for (DichVu dv : listDV) {
      modelDV.addElement(dv.getTenDV());
    }
    dsDV.setModel(modelDV);
  }

  void deleteRowHD() {
    spDAO = new SanPhamDAO();
    dvDAO = new DichVuDAO();
    int startIndex = tblHD.getSelectedRow();
    if (startIndex < 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn vào dòng bạn muốn xoá !", "Lỗi", HEIGHT);
      return;
    }
    int countIndex = tblHD.getSelectedRowCount();
    for (int k = startIndex + countIndex - 1; k >= startIndex; k--) {
      DefaultTableModel model = (DefaultTableModel) tblHD.getModel();
      if (tblHD.getValueAt(k, 0).equals("SP")) {
        int ma = findIndexSP(spDAO.findByMaSP(String.valueOf(tblHD.getValueAt(k, 1)), connect).getMaSP());
        listSPselect.remove(ma);
      }
      if (tblHD.getValueAt(k, 0).equals("DV")) {
        int ma = findIndexDV(dvDAO.findByMaDV(String.valueOf(tblHD.getValueAt(k, 1)), connect).getMaDV());
        listDVselect.remove(ma);
      }
      model.removeRow(k);
    }
    totalMoney();
  }

  int findIndexSP(String ma) {
    int i = 0;
    for (SanPham sp : listSPselect) {
      if (sp.getMaSP().equals(ma)) {
        return i;
      }
      i++;
    }
    return -1;
  }

  int findIndexDV(String ma) {
    int i = 0;
    for (DichVu dv : listDVselect) {
      if (dv.getMaDV().equals(ma)) {
        return i;
      }
      i++;
    }
    return -1;
  }

  void resetTable() {
    DefaultTableModel model = (DefaultTableModel) tblHD.getModel();
    int countRow = model.getRowCount();
    for (int i = countRow - 1; i >= 0; i--) {
      model.removeRow(i);
    }
    listSPselect.clear();
    listDVselect.clear();
    totalMoney();
  }

  void selectDV() {
    int indexLH = cboLoaiHinhDV.getSelectedIndex();
    int indexDV = dsDV.getSelectedIndex();
    if (indexLH == -1) {
      indexLH = 0;
    }
    lhDAO = new LoaiHinhDAO();
    dvDAO = new DichVuDAO();
    listLH = lhDAO.getLoaiHinhDichVu(connect);
    listDV = dvDAO.getDichVuByMaLH(connect, listLH.get(indexLH).getMaLH());
    DichVu dv = listDV.get(indexDV);
    fillTableHD(dv, null);
    totalMoney();
  }

  void selectSP() {
    int indexSP = dsSP.getSelectedIndex();
    spDAO = new SanPhamDAO();
    listSP = spDAO.getSanPham(connect);
    SanPham sp = listSP.get(indexSP);
    fillTableHD(null, sp);
    totalMoney();
  }

  void fillTableHD(DichVu dv, SanPham sp) {
    DefaultTableModel model = (DefaultTableModel) tblHD.getModel();
    int countRow = model.getRowCount();
    if (sp == null) {
      boolean checkDV = true;
      for (int i = 0; i < countRow; i++) {
        if (dv.getMaDV().equalsIgnoreCase(String.valueOf(tblHD.getValueAt(i, 1)))) {
          tblHD.setValueAt(Integer.parseInt(String.valueOf(tblHD.getValueAt(i, 3))) + 1, i, 3);
          checkDV = false;
        }
      }
      if (checkDV) {
        listDVselect.add(dv);
        model.setRowCount(countRow);
        model.addRow(new Object[]{
          "DV", dv.getMaDV(), dv.getTenDV(), 1, 100000
        });
      }
    }
    if (dv == null) {
      boolean checkSP = true;
      for (int i = 0; i < countRow; i++) {
        if (sp.getMaSP().equalsIgnoreCase(String.valueOf(tblHD.getValueAt(i, 1)))) {
          tblHD.setValueAt(Integer.parseInt(String.valueOf(tblHD.getValueAt(i, 3))) + 1, i, 3);
          checkSP = false;
        }
      }
      if (checkSP) {
        listSPselect.add(sp);
        model.setRowCount(countRow);
        model.addRow(new Object[]{
          "SP", sp.getMaSP(), sp.getTenSP(), 1, (Math.round(sp.getGiaBan() * 10) / 10)
        });
      }
    }
  }

  void checkKH() {
    khDAO = new KhachHangDAO();
    KhachHang kh = khDAO.findBySDT(txtSDTKH.getText(), connect);
    if (kh == null) {
      txtTenKH.setText("");
      txtTenKH.setEditable(true);
      lblNotification.setText("Khách hàng này chưa mua lần nào, hãy nhập vào tên !");
      lblNotification.setToolTipText("Khách hàng này chưa mua lần nào, hãy nhập vào tên !");
    } else {
      txtTenKH.setText(kh.getTenKH());
      txtTenKH.setEditable(false);
      lblNotification.setText("");
      lblNotification.setToolTipText("");
    }
    if (txtSDTKH.getText().equals("")) {
      txtTenKH.setText("");
      txtTenKH.setEditable(true);
      lblNotification.setText("");
      lblNotification.setToolTipText("");
    }
    if (!txtTenKH.getText().equals("")) {
      lblNotification.setText("");
      lblNotification.setToolTipText("");
    }
  }

  StringBuilder validatorHD() {
    StringBuilder sb = new StringBuilder();
    Validator.checkEmpty(txtSDTKH, sb, "Hãy nhập vào số điện thoại khách hàng !");
    Validator.checkEmpty(txtTenKH, sb, "Hãy nhập vào tên khách hàng !");
    return sb;
  }

  void totalMoney() {
    double total = 0;
    for (int i = 0; i < tblHD.getRowCount(); i++) {
      total += Double.parseDouble(String.valueOf(tblHD.getValueAt(i, 4))) * Double.parseDouble(String.valueOf(tblHD.getValueAt(i, 3)));
    }
    lblTongTien.setText(String.valueOf(total));
  }

  void createHD() {
    if (validatorHD().length() > 0) {
      JOptionPane.showMessageDialog(this, validatorHD() + "Tạo thất bại !", "Lỗi", HEIGHT);
      return;
    }
    String patternSDT = "[0][0-9]{9}";
    if (!Pattern.matches(patternSDT, txtSDTKH.getText())) {
      JOptionPane.showMessageDialog(this, "Hãy nhập đúng định dạng SĐT ! (0**********)");
      return;
    }
    if (tblHD.getRowCount() <= 0) {
      JOptionPane.showMessageDialog(this, "Hãy chọn 1 sản phẩm hoặc dịch vụ muốn thanh toán !", "Lỗi", HEIGHT);
      return;
    }
    HoaDon hd = new HoaDon(Auth.user.getMaNV(), txtSDTKH.getText(), txtGhiChuHD.getText(), DateHelper.toDate(lblNgayTaoHD.getText(), "dd-MM-yyyy"));
    hdDAO = new HoaDonDAO();
    cthdDAO = new ChiTietHoaDonDAO();
    connect = new JdbcHelper();
    if (hdDAO.insertHD(hd, connect) == 1) {
      JOptionPane.showMessageDialog(this, "Tạo thành công !");
      maHD = hdDAO.getMaHD(connect);
      for (DichVu dv : listDVselect) {
        HoaDonChiTiet hdct = new HoaDonChiTiet(getSL(dv.getMaDV()), maHD, dv.getMaDV(), null, getGia(dv.getMaDV()));
        cthdDAO.insertCTHDSP(hdct, connect);
      }
      for (SanPham sp : listSPselect) {
        HoaDonChiTiet hdct = new HoaDonChiTiet(getSL(sp.getMaSP()), maHD, null, sp.getMaSP(), getGia(sp.getMaSP()));
        cthdDAO.insertCTHDSP(hdct, connect);
      }
      new HDCTDialog(this, true).setVisible(true);
      khDAO = new KhachHangDAO();
      KhachHang checkKH = khDAO.findBySDT(txtSDTKH.getText(), connect);
      if (checkKH == null) {
        KhachHang kh = new KhachHang(txtTenKH.getText(), null, txtSDTKH.getText(), null, true);
        khDAO.insertKH(kh, connect);
        fillTableKH();
      }
      ReadPDF(maHD, txtSDTKH.getText(), txtTenKH.getText(),
              lblTenNV.getText(), txtGhiChuHD.getText(), lblTongTien.getText(), lblNgayTaoHD.getText());
      resetTable();
      txtSDTKH.setText("");
      txtTenKH.setText("");
      lblNotification.setText("");
      lblNotification.setToolTipText("");
    } else {
      JOptionPane.showMessageDialog(this, "Tạo thất bại !", "Lỗi", HEIGHT);
    }
  }

  int getSL(String ma) {
    int SL = 1;
    for (int i = 0; i < tblHD.getRowCount(); i++) {
      if (tblHD.getValueAt(i, 1).equals(ma)) {
        return Integer.parseInt(String.valueOf(tblHD.getValueAt(i, 3)));
      }
    }
    return SL;
  }

  double getGia(String ma) {
    double SL = 1;
    for (int i = 0; i < tblHD.getRowCount(); i++) {
      if (tblHD.getValueAt(i, 1).equals(ma)) {
        return Integer.parseInt(String.valueOf(tblHD.getValueAt(i, 4)));
      }
    }
    return SL;
  }

  void ReadPDF(String MaHD, String SDT, String TenKH, String TenNV, String GhiChu, String TongTien, String NgayTao) {
    Document document = new Document();
    try {
      // khởi tạo một PdfWriter truyền vào document và FileOutputStream
      File file = new File("HoaDon/" + MaHD + " " + NgayTao + ".pdf");
      FileOutputStream fos = new FileOutputStream(file);
      PdfWriter.getInstance(document, fos);

      // mở file để thực hiện viết
      document.open();
      // thêm nội dung sử dụng add function
      Paragraph pr = new Paragraph("------------------------------HOA DON------------------------------\n"
              + "* Ten Nhan Vien: " + StringUtils.removeAccent(TenNV) + "\n"
              + "* Ten Khach Hang: " + StringUtils.removeAccent(TenKH) + "\n"
              + "* SDT Khach Hang: " + SDT + "\n"
              + "-------------------------------------------------------------------\n");
      pr.setIndentationLeft(80);
      document.add(pr);
      String Ten;
      int SoLuong;
      double GiaThanh;
      for (int i = 0; i < tblHD.getRowCount(); i++) {
        Ten = String.valueOf(tblHD.getValueAt(i, 2));
        SoLuong = Integer.valueOf(String.valueOf(tblHD.getValueAt(i, 3)));
        GiaThanh = Double.valueOf(String.valueOf(tblHD.getValueAt(i, 4)));
        Paragraph pr1 = new Paragraph("* " + StringUtils.removeAccent(Ten) + ":     " + SoLuong + " x " + GiaThanh + "\n");
        pr1.setIndentationLeft(80);
        document.add(pr1);
      }
      Paragraph pr2 = new Paragraph("-------------------------------------------------------------------\n"
              + "* Ghi Chu: " + StringUtils.removeAccent(GhiChu) + "\n"
              + "* TONG TIEN: " + TongTien + "\n\n"
              + "*****************************(" + NgayTao + ")***************************");
      pr2.setIndentationLeft(80);
      document.add(pr2);

      document.close();
      int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn hiện hoá đơn PDF ?", "Thông báo", JOptionPane.YES_NO_OPTION);
      if (a == JOptionPane.YES_OPTION) {
        openFile(file);
      }
    } catch (DocumentException e) {
      e.printStackTrace();
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    }
  }

  void openFile(File file) {
    try {
      Desktop desktop = Desktop.getDesktop();
      if (file.exists()) {
        desktop.open(file);
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}
